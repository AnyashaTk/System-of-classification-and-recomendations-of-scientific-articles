text,fonts-size,fonts-type,fonts-style,base_str_len,max_str_len
Astronomy,9,NimbusRomNo9L-Regu-Slant_167,,9,9
&,9,rtxr-Slant_167,,1,1
Astrophysics,9,NimbusRomNo9L-Regu-Slant_167,,12,12
"manuscript no. pera_etal
April 9, 2021",9,NimbusRomNo9L-Regu,,38,24
©,9,rtcxr,,1,1
ESO 2021,9,NimbusRomNo9L-Regu,,8,8
"1
2
0
2",10,Times-Roman,,7,1
,5,Times-Roman,,0,0
r,6,Times-Roman,,1,1
p,10,Times-Roman,,1,1
A,14,Times-Roman,,1,1
,5,Times-Roman,,0,0
8,10,Times-Roman,,1,1
,5,Times-Roman,,0,0
],6,Times-Roman,,1,1
"A
G",14,Times-Roman,,3,1
.,5,Times-Roman,,1,1
"h
p",10,Times-Roman,,3,1
-,6,Times-Roman,,1,1
o,10,Times-Roman,,1,1
r,6,Times-Roman,,1,1
t,5,Times-Roman,,1,1
s,7,Times-Roman,,1,1
a,8,Times-Roman,,1,1
[,6,Times-Roman,,1,1
,5,Times-Roman,,0,0
"3
v
0
6
6
1
0",10,Times-Roman,,13,1
.,5,Times-Roman,,1,1
"1
0
1
2",10,Times-Roman,,7,1
:,5,Times-Roman,,1,1
v,10,Times-Roman,,1,1
i,5,Times-Roman,,1,1
X,14,Times-Roman,,1,1
r,6,Times-Roman,,1,1
a,8,Times-Roman,,1,1
pyUPMASK: An improved unsupervised clustering algorithm,16,NimbusSanL-Bold,,55,55
M. S. Pera,10,NimbusRomNo9L-Regu,,10,10
1,7,NimbusRomNo9L-Regu,,1,1
", G. I. Perren",10,NimbusRomNo9L-Regu,,14,14
1,7,NimbusRomNo9L-Regu,,1,1
", A. Moitinho",10,NimbusRomNo9L-Regu,,13,13
2,7,NimbusRomNo9L-Regu,,1,1
", H. D. Navone",10,NimbusRomNo9L-Regu,,14,14
3,7,NimbusRomNo9L-Regu,,1,1
",",7,rtxmi,,1,1
4,7,NimbusRomNo9L-Regu,,1,1
", and R. A. Vazquez",10,NimbusRomNo9L-Regu,,19,19
5,7,NimbusRomNo9L-Regu,,1,1
1,5,NimbusRomNo9L-Regu,,1,1
"Instituto de Astrofísica de La Plata (IALP-CONICET), 1900 La Plata, Argentina",8,NimbusRomNo9L-Regu,,77,77
e-mail:,8,NimbusRomNo9L-Regu,,7,7
msolpera@gmail.com,8,t1xtt,,18,18
2,5,NimbusRomNo9L-Regu,,1,1
"CENTRA, Faculdade de Ciências, Universidade de Lisboa, Ed. C8, Campo Grande, 1749-016 Lisboa, Portugal",8,NimbusRomNo9L-Regu,,102,102
3,5,NimbusRomNo9L-Regu,,1,1
"Facultad de Ciencias Exactas, Ingeniería y Agrimensura (UNR), 2000 Rosario, Argentina",8,NimbusRomNo9L-Regu,,85,85
4,5,NimbusRomNo9L-Regu,,1,1
"Instituto de Física de Rosario (CONICET-UNR), 2000 Rosario, Argentina,",8,NimbusRomNo9L-Regu,,70,70
5,5,NimbusRomNo9L-Regu,,1,1
"Facultad de Ciencias Astronómicas y Geofísicas (UNLP-IALP-CONICET), 1900 La Plata, Argentina",8,NimbusRomNo9L-Regu,,92,92
"Received December 28, 2020; accepted March 25, 2021",8,NimbusRomNo9L-Regu,,51,51
ABSTRACT,8,NimbusSanL-Bold,,8,8
Aims.,8,NimbusSanL-Regu-Slant_167,,5,5
"We present pyUPMASK, an unsupervised clustering method for stellar clusters that builds upon the original UPMASK package.
The general approach of this method makes it plausible to be applied to analyses that deal with binary classes of any kind as long as
the fundamental hypotheses are met. The code is written entirely in Python and is made available through a public repository.",8,NimbusRomNo9L-Regu,,381,133
Methods.,8,NimbusSanL-Regu-Slant_167,,8,8
"The core of the algorithm follows the method developed in UPMASK but introduces several key enhancements. These
enhancements not only make pyUPMASK more general, they also improve its performance considerably.",8,NimbusRomNo9L-Regu,,209,111
Results.,8,NimbusSanL-Regu-Slant_167,,8,8
We thoroughly tested the performance of pyUPMASK on 600 synthetic clusters a,8,NimbusRomNo9L-Regu,,76,76
ﬀ,8,rtxr,,1,1
"ected by varying degrees of contamination
by ﬁeld stars. To assess the performance, we employed six di",8,NimbusRomNo9L-Regu,,102,60
ﬀ,8,rtxr,,1,1
"erent statistical metrics that measure the accuracy of probabilistic
classiﬁcation.",8,NimbusRomNo9L-Regu,,83,68
Conclusions.,8,NimbusSanL-Regu-Slant_167,,12,12
"Our results show that pyUPMASK is better performant than UPMASK for every statistical performance metric, while
still managing to be many times faster.",8,NimbusRomNo9L-Regu,,151,111
Key words.,8,NimbusSanL-Bold,,10,10
"open clusters and associations: general – methods: data analysis – methods: statistical – open clusters and associations:
individual: NGC2516",8,NimbusRomNo9L-Regu,,141,121
1. Introduction,10,NimbusSanL-Bold,,15,15
"Galactic open clusters are of great importance for the study of
the Galaxy’s chemical evolution, structure, and dynamics; these
sources also provide test beds for astrophysical codes that model
the evolution of stars. Located largely on the disk of the Milky
Way, analyses of open clusters is severely hindered by the pres-
ence of contaminating ﬁeld stars, located in the foreground and
background of the object of interest. These stars are projected
on the observed ﬁeld of view and end up deeply mixed with the
cluster members. The process of disentangling these two classes
of elements, of members from nonmembers (i.e., ﬁeld stars), can
be referred to as “decontamination”. A proper decontamination",9,NimbusRomNo9L-Regu,,703,65
of the cluster region is a key previous step to the analysis of,9,NimbusRomNo9L-Regu,,63,63
"the cluster sequence in search of fundamental parameters (e.g.,
metallicity, age, distance and extinction) that characterize the
open cluster. This analysis, which is often performed in photo-
metric space, requires a sequence that is as complete as possible,
but also as free of contaminating ﬁeld stars (nonmembers) as
possible. The goal of a decontamination algorithm is to obtain a
subset of stars that fulﬁlls both these conditions simultaneously.",9,NimbusRomNo9L-Regu,,452,66
"Over the years, a handful of decontamination algorithms
have been presented in the stellar cluster literature. Most of these
are variations of the Vasilevskis-Sanders method (Vasilevskis
et al. 1958; Sanders 1971) applied over proper motions, which",9,NimbusRomNo9L-Regu,,248,68
"are generally considered to be much better member discrimina-
tors than photometry. Nonparametric approaches have also been
developed (Cabrera-Cano & Alfaro 1990; Javakhishvili et al.
2006) and even an interactive tool to determine membership",9,NimbusRomNo9L-Regu,,242,61
probabilities was presented (Balaguer-Núñez et al. 2020),9,NimbusRomNo9L-Regu,,56,56
1,6,NimbusRomNo9L-Regu,,1,1
". More
references regarding membership estimation methods can be
found in Krone-Martins & Moitinho (2014, henceforth KMM14)
and Perren et al. (2015).",9,NimbusRomNo9L-Regu,,149,58
"The Unsupervised Photometric Membership Assignment in
Stellar Clusters algorithm (UPMASK), originally presented in
KMM14, has the advantage of being not only nonparametric,
but also unsupervised. This means that no a priori selection of
ﬁeld stars is required to serve as a comparison model, which
is generally the case in the previously mentioned methods. Al-
though UPMASK was motivated by the need of assigning clus-
ter memberships from photometric data, KMM14 had pointed
out that the method is general and could be easily applied to
other data types and clusters of objects. Recent examples of
UPMASK used on proper motions (and parallax data) can be
found in Cantat-Gaudin et al. (2018a), Cantat-Gaudin et al.
(2018b), Cantat-Gaudin et al. (2019), Carrera et al. (2019), and
Yontan et al. (2019). In the six years since its publication, the
KMM14 article has been referenced almost 50 times; this work
has also been applied to stellar proper motions and to study clus-
ters of galaxies, which indicates a wide adoption by the astro-
physical community.",9,NimbusRomNo9L-Regu,,1059,66
"In this work we present an improved version of the original
UPMASK algorithm, which we call pyUPMASK because it is
written entirely in Python. We believe this new package can be
of great use, particularly with the advent of the recent early data",9,NimbusRomNo9L-Regu,,245,67
"release 3 (eDR3, Gaia Collaboration et al. 2020) of the Gaia",9,NimbusRomNo9L-Regu,,60,60
1,5,NimbusRomNo9L-Regu,,1,1
Clusterix,8,NimbusRomNo9L-Regu,,9,9
clusterix/,8,t1xtt,,10,10
2.0:,8,NimbusRomNo9L-Regu,,4,4
http://clusterix.cab.inta-csic.es/,8,t1xtt,,34,34
"Article number, page 1 of 14",8,NimbusRomNo9L-Regu,,28,28
A,8,NimbusRomNo9L-Regu-Slant_167,,1,1
&,8,rtxr-Slant_167,,1,1
A proofs:,8,NimbusRomNo9L-Regu-Slant_167,,9,9
manuscript no. pera_etal,8,NimbusRomNo9L-Regu,,24,24
"mission (Gaia Collaboration et al. 2016). This package is made
available as a stand-alone code, but it will also be included in
an upcoming release of our Automated Stellar Cluster Analysis
tool (",9,NimbusRomNo9L-Regu,,196,64
ASteCA,9,t1xtt,,6,6
", Perren et al. 2015). Throughout the article we
refer to statistical clusters as simply clusters and explicitly
distinguish them from stellar clusters when required.",9,NimbusRomNo9L-Regu,,166,63
"This paper is organized as follows: In Section 2 we give a
brief summary of the UPMASK algorithm and present the de-
tails of the enhancements introduced in our code. Section 3 in-
troduces the synthetic cluster sample used in the analysis, and
describes the selected statistical performance metrics employed
to assess the behavior of UPMASK and pyUPMASK. The re-
sults are summarized in Section 4. Finally, our conclusions are
given in Section 5.",9,NimbusRomNo9L-Regu,,447,63
2. Methods,10,NimbusSanL-Bold,,10,10
"We present a brief description of the general algorithm used
in UPMASK as well as the major enhancements introduced in
pyUPMASK. Both methods are open source and their codes can
be found in their respective public repositories.",9,NimbusRomNo9L-Regu,,227,60
2,6,NimbusRomNo9L-Regu,,1,1
",",6,rtxmi,,1,1
3,6,NimbusRomNo9L-Regu,,1,1
2.1. The UPMASK algorithm,9,NimbusSanL-Regu-Slant_167,,25,25
"The UPMASK package is described in full in KMM14 and we
do not repeat it in this work. We give instead a summary of the
most relevant parts and of its core algorithm. The original article
provides a more detailed description.",9,NimbusRomNo9L-Regu,,225,67
"Assigning probability memberships to the two classes of
elements within a stellar cluster ﬁeld (members and ﬁeld stars)
is a notably complicated problem for two main reasons. First,
the classes are usually very much imbalanced. This means that
one of the classes (ﬁeld stars) can make up a lot more than
50% of the total dataset. In some extreme cases, the frame of
an observed stellar cluster can consist of over 90% of ﬁeld stars
and less than 10% of actual true members. Even worse, this
information (i.e., the true balance) cannot be assumed to be
known a priori. Second, the two classes are deeply entangled.
This is particularly true in the two-dimensional coordinates
space where members and ﬁeld stars are mixed throughout the
entire cluster region. O",9,NimbusRomNo9L-Regu,,759,65
ﬀ,9,rtxr,,1,1
"the shelf clustering methods normally
assume that there is some kind of frontier that largely separates
the classes with minimal overlap. This is not the case in stellar
clusters analysis. The UPMASK algorithm deals with both of
these issues in a clever and e",9,NimbusRomNo9L-Regu,,259,65
ﬀ,9,rtxr,,1,1
"ective way, by taking advantage",9,NimbusRomNo9L-Regu,,31,31
of the fact that we can approximate the distribution of ﬁeld stars,9,NimbusRomNo9L-Regu,,66,66
"in the coordinates space with a uniform model. This is further
discussed in Sect. 2.2.2.",9,NimbusRomNo9L-Regu,,88,62
"The UPMASK algorithm is composed of two main blocks:
an outer loop and an inner loop. The outer loop is responsible
for taking into account the uncertainties in the data and rerun-
ning the inner loop a manually ﬁxed number of times; these un-
certainties are optional and turned o",9,NimbusRomNo9L-Regu,,281,64
ﬀ,9,rtxr,,1,1
"by default. The latter is
required because of the inherent stochasticity of the K-means
(KMS) method (MacQueen 1967), employed by the inner loop.
The number of runs for the outer loop is one of the two most im-
portant parameters in the algorithm. The inner loop holds the two",9,NimbusRomNo9L-Regu,,276,65
2,5,NimbusRomNo9L-Regu,,1,1
UPMASK:,8,NimbusRomNo9L-Regu,,7,7
UPMASK/,8,t1xtt,,7,7
3,5,NimbusRomNo9L-Regu,,1,1
pyUPMASK:,8,NimbusRomNo9L-Regu,,9,9
https://github.com/msolpera/pyUPMASK,8,t1xtt,,36,36
https://cran.r-project.org/web/packages/,8,t1xtt,,40,40
"Article number, page 2 of 14",8,NimbusRomNo9L-Regu,,28,28
"main parts that make up the core of the algorithm: the clustering
method (KMS, as stated before), and the random ﬁeld rejection
method (henceforth: RFR). The clustering method is applied on
the nonpositional features (e.g. photometry and proper motions),
and separates the cluster data into",9,NimbusRomNo9L-Regu,,290,65
N,9,NimbusRomNo9L-ReguItal,,1,1
clusters. The,9,NimbusRomNo9L-Regu,,13,13
N,9,NimbusRomNo9L-ReguItal,,1,1
"value is de-
termined by a parameter that determines the number of elements
that should be contained in each cluster. That is, dividing the to-
tal number of stars by this value gives",9,NimbusRomNo9L-Regu,,183,67
N,9,NimbusRomNo9L-ReguItal,,1,1
", the ﬁnal number of
clusters that are generated.",9,NimbusRomNo9L-Regu,,49,28
"After the clustering method is applied, the RFR method
serves the purpose of ﬁltering those clusters identiﬁed by the
KMS that are consistent with a random uniform distribution of
elements. This consistency is assessed in UPMASK by means
of a two-dimensional kernel density estimation (KDE) analysis.
In short: the KDE of the coordinates space of each cluster
(identiﬁed by the KMS in the previous step) is compared with
the KDE of a two-dimensional uniform distribution in the same
range. If these are deemed to be similar enough, the cluster is
discarded as a realization of a random selection of ﬁeld stars,
and all its stars are assigned a value of 0. Those clusters that
survive the RFR process are kept for a subsequent iteration
of the inner loop. When no more clusters are rejected and the
inner loop is ﬁnished, all the stars within surviving clusters are
assigned a value of 1. After this, a new iteration of the outer
loop is initiated. The ﬁnal probabilities assigned to each star are",9,NimbusRomNo9L-Regu,,996,67
"simply the averages of the (0, 1) values assigned by the inner
loop at each run of the outer loop.",9,NimbusRomNo9L-Regu,,98,62
"The two parameters mentioned above are the most important
parameters in UPMASK, since varying their value can substan-
tially a",9,NimbusRomNo9L-Regu,,127,60
ﬀ,9,rtxr,,1,1
"ect the performance of the method. We comment on how
we selected these parameters in Sect 3.3.",9,NimbusRomNo9L-Regu,,94,52
2.2. The pyUPMASK algorithm,9,NimbusSanL-Regu-Slant_167,,27,27
An obvious di,9,NimbusRomNo9L-Regu,,13,13
ﬀ,9,rtxr,,1,1
"erence between pyUPMASK and UPMASK is
that the former is written entirely in Python",9,NimbusRomNo9L-Regu,,83,45
4,6,NimbusRomNo9L-Regu,,1,1
instead of R,9,NimbusRomNo9L-Regu,,12,12
5,6,NimbusRomNo9L-Regu,,1,1
", as is
the case with UPMASK. We believe that this is a considerable
advantage given the noticeable shift of the astrophysical commu-
nity toward the Python language in recent years. This is made ev-
ident by large Python-based projects such as Astropy",9,NimbusRomNo9L-Regu,,252,65
6,6,NimbusRomNo9L-Regu,,1,1
"(Astropy
Collaboration et al. 2013; Price-Whelan et al. 2018) and inter-
national conferences such as Python in Astronomy",9,NimbusRomNo9L-Regu,,121,63
7,6,NimbusRomNo9L-Regu,,1,1
". A recent
survey found that Python is the most popular programming lan-
guage in the astronomical community (Momcheva & Tollerud
2015; Tollerud et al. 2019).",9,NimbusRomNo9L-Regu,,158,61
The general structure of pyUPMASK closely follows the,9,NimbusRomNo9L-Regu,,53,53
UPMASK algorithm: an outer loop containing an inner loop that,9,NimbusRomNo9L-Regu,,61,61
"applies the cluster identiﬁcation and rejection methods. What
sets these two algorithms apart is twofold: First, pyUPMASK
supports almost a dozen clustering methods, while UPMASK
only supports KMS; and second, pyUPMASK contains three
added analysis blocks that are not present in UPMASK. In Fig. 1
we show the complete ﬂow chart of the pyUPMASK algorithm.
The blocks indicated in violet are those that are either enhanced
or added in this work. The enhanced clustering methods block
and the three added blocks are detailed in Sects 2.2.1, 2.2.2,
2.2.3, and 2.2.4, respectively. The remaining portions of the
code are mostly equivalent to those described in KMM14 for",9,NimbusRomNo9L-Regu,,666,65
4,5,NimbusRomNo9L-Regu,,1,1
https://www.python.org/,8,t1xtt,,23,23
5,5,NimbusRomNo9L-Regu,,1,1
https://www.r-project.org/,8,t1xtt,,26,26
6,5,NimbusRomNo9L-Regu,,1,1
http://www.astropy.org,8,t1xtt,,22,22
7,5,NimbusRomNo9L-Regu,,1,1
http://openastronomy.org/pyastro/,8,t1xtt,,33,33
M. S. Pera et al.: pyUPMASK: An improved unsupervised clustering algorithm,8,NimbusRomNo9L-Regu,,74,74
"UPMASK and, for the sake of brevity, we do not repeat their
details or purpose in this work.",9,NimbusRomNo9L-Regu,,92,59
2.2.1. Clustering methods,9,NimbusSanL-Regu,,25,25
"While UPMASK supports the KMS method exclusively (as
of the current version 1.2), pyUPMASK relies on the Python
library",9,NimbusRomNo9L-Regu,,119,58
scikit-learn,9,t1xtt,,12,12
8,6,NimbusRomNo9L-Regu,,1,1
"(Pedregosa et al. 2011a) for the imple-
mentation of most of the supported clusterings methods. This
library includes around a dozen di",9,NimbusRomNo9L-Regu,,135,60
ﬀ,9,rtxr,,1,1
"erent clustering methods for
unlabeled data, which are all available to use in pyUPMASK.
Eventually this can be extended to support even more methods
in future releases of the code via the",9,NimbusRomNo9L-Regu,,188,60
PyClustering,9,t1xtt,,12,12
library,9,NimbusRomNo9L-Regu,,7,7
9,6,NimbusRomNo9L-Regu,,1,1
.,9,NimbusRomNo9L-Regu,,1,1
"Once chosen, the clustering method processes the nonspatial
data at the beginning of the inner loop as shown in Fig. 1. The
number of individual clusters to generate is ﬁxed indirectly
through a user-selected input parameter, as done in UPMASK.
Each of these clusters is then analyzed by the RFR method
and kept or rejected given its similarity with a random uniform
distribution of elements. This is further discussed in Sect. 2.2.2.",9,NimbusRomNo9L-Regu,,434,67
"In Sect 4 we present a suit of tests performed with four of
the methods provided by",9,NimbusRomNo9L-Regu,,83,59
scikit-learn,9,t1xtt,,12,12
": KMS, mini batch k-",9,NimbusRomNo9L-Regu,,20,20
"means (MBK, Sculley 2010), gaussian mixture models (GMM,
Baxter 2010), and agglomerative clustering (AGG, Zepeda-
Mendoza & Resendis-Antonio 2013). In addition to these we
include tests performed with two methods developed in this
work: the nearest neighbors density method (KNN), which is
based on the density peak approach introduced in Rodriguez &
Laio (2014); and the Voronoi (VOR) method, which is based on
the construction of N-dimensional Voronoi diagrams (Voronoi
1908). The latter three methods (AGG, KNN and VOR) have a
characteristic in common: no stochastic process or approxima-
tion is employed by any of them. In other words, these methods
are deterministic. This means that, for the same input data and
input parameters, di",9,NimbusRomNo9L-Regu,,739,63
ﬀ,9,rtxr,,1,1
"erent runs lead to one single result. Assum-
ing that no data resampling is performed (the default setting in
both UPMASK and pyUPMASK) the outer loop then needs to
be run only once because subsequent runs would produce the
same probabilities each time. For this reason we refer to these as
“single-run” methods. As can easily be inferred, these are signif-
icantly faster than UPMASK and the rest of the tested methods,
which require multiple outer loop runs.",9,NimbusRomNo9L-Regu,,460,66
"The results obtained with the six selected methods are com-
pared to UPMASK results obtained on the same dataset of syn-
thetic clusters. The synthetic clusters dataset is described in",9,NimbusRomNo9L-Regu,,184,63
Sect. 3.1.,9,NimbusRomNo9L-Regu,,10,10
2.2.2. Ripley’s K function,9,NimbusSanL-Regu,,26,26
"After the clusters are generated on the nonspatial data, the RFR
block is used to ﬁlter out those that are consistent with the re-
alization of a random uniform distribution on the spatial data
(i.e., coordinates). The hypothesis at work is that ﬁeld stars are
randomly scattered throughout the two spatial dimensions of the
frame, following somewhat closely a uniform distribution. Ac-
tual star cluster members, on the other hand, present a more
densely packed spatial distribution. The latter is of course an ap-
proximation to the real, and unknown, probability distribution of",9,NimbusRomNo9L-Regu,,581,67
"ﬁeld stars, but it is still a very reasonable one, as the results show.",9,NimbusRomNo9L-Regu,,71,71
8,5,NimbusRomNo9L-Regu,,1,1
https://scikit-learn.org/,8,t1xtt,,25,25
9,5,NimbusRomNo9L-Regu,,1,1
https://pyclustering.github.io,8,t1xtt,,30,30
"Article number, page 3 of 14",8,NimbusRomNo9L-Regu,,28,28
Fig. 1.,8,NimbusRomNo9L-Medi,,7,7
Flow chart of the pyUPMASK code. The enhanced clustering,8,NimbusRomNo9L-Regu,,56,56
block and the analysis blocks added in this work are indicated in violet.,8,NimbusRomNo9L-Regu,,73,73
A,8,NimbusRomNo9L-Regu-Slant_167,,1,1
&,8,rtxr-Slant_167,,1,1
A proofs:,8,NimbusRomNo9L-Regu-Slant_167,,9,9
manuscript no. pera_etal,8,NimbusRomNo9L-Regu,,24,24
"The UPMASK algorithm employs a KDE-based method to
characterize the distribution of each cluster found in the spatial
dimensions. This distribution is then compared to that of thou-
sands of random uniform distributions generated in the same
two-dimensional range and with the same number of elements.
After that, a “KDE distance” is obtained by comparing their
means, maximum, and standard deviation values. If the distance
between both distributions is less than a user-deﬁned threshold
parameter, the cluster is considered to be close enough to a real-
ization of a random uniform distribution. When this condition is
met, the cluster is rejected as a “fake cluster” (see Fig 1).",9,NimbusRomNo9L-Regu,,682,66
"In pyUPMASK we introduce Ripley’s K function (Ripley
1976, 1979) to assess the closeness of a cluster to a random uni-
form distribution. This function is deﬁned as",9,NimbusRomNo9L-Regu,,164,65
ˆ,9,NimbusRomNo9L-Regu,,1,1
R,9,NimbusRomNo9L-ReguItal,,1,1
(,9,NimbusRomNo9L-Regu,,1,1
r,9,NimbusRomNo9L-ReguItal,,1,1
),9,NimbusRomNo9L-Regu,,1,1
=,9,rtxr,,1,1
"A
N",9,NimbusRomNo9L-ReguItal,,3,1
2,6,NimbusRomNo9L-Regu,,1,1
N,6,NimbusRomNo9L-ReguItal,,1,1
,9,txex,,0,0
N,6,NimbusRomNo9L-ReguItal,,1,1
,9,txex,,0,0
i,6,NimbusRomNo9L-ReguItal,,1,1
j,6,NimbusRomNo9L-ReguItal,,1,1
,6,txsyc,,0,0
i,6,NimbusRomNo9L-ReguItal,,1,1
I,9,NimbusRomNo9L-ReguItal,,1,1
(,9,NimbusRomNo9L-Regu,,1,1
d,9,NimbusRomNo9L-ReguItal,,1,1
i j,6,NimbusRomNo9L-ReguItal,,3,3
<,9,rtxmi,,1,1
r,9,NimbusRomNo9L-ReguItal,,1,1
),9,NimbusRomNo9L-Regu,,1,1
e,9,NimbusRomNo9L-ReguItal,,1,1
i j,6,NimbusRomNo9L-ReguItal,,3,3
",",9,rtxmi,,1,1
(1),9,NimbusRomNo9L-Regu,,3,3
(2),9,NimbusRomNo9L-Regu,,3,3
(3),9,NimbusRomNo9L-Regu,,3,3
where,9,NimbusRomNo9L-Regu,,5,5
A,9,NimbusRomNo9L-ReguItal,,1,1
"is the area of the domain (our observed frame),",9,NimbusRomNo9L-Regu,,47,47
N,9,NimbusRomNo9L-ReguItal,,1,1
"is
the number of points within it,",9,NimbusRomNo9L-Regu,,34,31
d,9,NimbusRomNo9L-ReguItal,,1,1
i j,6,NimbusRomNo9L-ReguItal,,3,3
is the distance between points,9,NimbusRomNo9L-Regu,,30,30
i,9,NimbusRomNo9L-ReguItal,,1,1
",",9,rtxmi,,1,1
j,9,NimbusRomNo9L-ReguItal,,1,1
",",9,NimbusRomNo9L-Regu,,1,1
I,9,NimbusRomNo9L-ReguItal,,1,1
"is a function that results in 1 if the condition is met and
0 otherwise,",9,NimbusRomNo9L-Regu,,72,59
e,9,NimbusRomNo9L-ReguItal,,1,1
i j,6,NimbusRomNo9L-ReguItal,,3,3
"is the edge correction (if required), and",9,NimbusRomNo9L-Regu,,41,41
r,9,NimbusRomNo9L-ReguItal,,1,1
"is the
scale at which the ˆ",9,NimbusRomNo9L-Regu,,27,20
R,9,NimbusRomNo9L-ReguItal,,1,1
function is calculated.,9,NimbusRomNo9L-Regu,,23,23
"Ripley’s K function is employed to test for complete spa-
tial randomness (CSR), also called homogeneous Poisson point
process, which basically consist of points randomly located on
a given domain. In a two-dimensional space it is trivial to prove
that if points are distributed following CSR, then",9,NimbusRomNo9L-Regu,,298,65
K,9,NimbusRomNo9L-ReguItal,,1,1
(,9,NimbusRomNo9L-Regu,,1,1
r,9,NimbusRomNo9L-ReguItal,,1,1
) equals,9,NimbusRomNo9L-Regu,,8,8
π,9,rtxmi,,1,1
r,9,NimbusRomNo9L-ReguItal,,1,1
2,6,NimbusRomNo9L-Regu,,1,1
"(Streib & Davis 2011). The K function is thus a perfect
match for our intended usage which is precisely to test if a set of
points (stars) are distributed following uniform spatial random-
ness. We employ the form of the K function given by",9,NimbusRomNo9L-Regu,,240,67
ˆ,9,NimbusRomNo9L-Regu,,1,1
L,9,NimbusRomNo9L-ReguItal,,1,1
(,9,NimbusRomNo9L-Regu,,1,1
r,9,NimbusRomNo9L-ReguItal,,1,1
),9,NimbusRomNo9L-Regu,,1,1
=,9,rtxr,,1,1
[ ˆ,9,NimbusRomNo9L-Regu,,3,3
K,9,NimbusRomNo9L-ReguItal,,1,1
(,9,NimbusRomNo9L-Regu,,1,1
r,9,NimbusRomNo9L-ReguItal,,1,1
),9,NimbusRomNo9L-Regu,,1,1
/π,9,rtxmi,,2,2
],9,NimbusRomNo9L-Regu,,1,1
2,6,NimbusRomNo9L-Regu,,1,1
",",9,rtxmi,,1,1
which converges to,9,NimbusRomNo9L-Regu,,18,18
r,9,NimbusRomNo9L-ReguItal,,1,1
"under CSR. Following Dixon (2014) we
combine information from several distances (",9,NimbusRomNo9L-Regu,,81,44
r,9,NimbusRomNo9L-ReguItal,,1,1
"values) in a single
test statistic deﬁned as",9,NimbusRomNo9L-Regu,,44,24
ˆ,9,NimbusRomNo9L-Regu,,1,1
L,9,NimbusRomNo9L-ReguItal,,1,1
m,6,NimbusRomNo9L-ReguItal,,1,1
=,9,rtxr,,1,1
sup,9,NimbusRomNo9L-Regu,,3,3
r,6,NimbusRomNo9L-ReguItal,,1,1
|,9,txsy,,1,1
ˆ,9,NimbusRomNo9L-Regu,,1,1
L,9,NimbusRomNo9L-ReguItal,,1,1
(,9,NimbusRomNo9L-Regu,,1,1
r,9,NimbusRomNo9L-ReguItal,,1,1
),9,NimbusRomNo9L-Regu,,1,1
−,9,txsy,,1,1
r,9,NimbusRomNo9L-ReguItal,,1,1
|,9,txsy,,1,1
",",9,rtxmi,,1,1
"where sup is the supremum. Given that the lengths of the ob-
served frame are normalized by default to the range [0",9,NimbusRomNo9L-Regu,,115,60
",",9,rtxmi,,1,1
"1] prior
to processing, the list of distances at which Eq. 3 is calculated
are chosen to be in the range [0",9,NimbusRomNo9L-Regu,,107,65
",",9,rtxmi,,1,1
0,9,NimbusRomNo9L-Regu,,1,1
.,9,rtxmi,,1,1
25]. This is the range advised,9,NimbusRomNo9L-Regu,,30,30
in the,9,NimbusRomNo9L-Regu,,6,6
Kest,9,t1xtt,,4,4
function of the,9,NimbusRomNo9L-Regu,,15,15
spatstat,9,t1xtt,,8,8
package (Baddeley et al.,9,NimbusRomNo9L-Regu,,24,24
2015),9,NimbusRomNo9L-Regu,,5,5
10,6,NimbusRomNo9L-Regu,,2,2
.,9,NimbusRomNo9L-Regu,,1,1
The null hypothesis (,9,NimbusRomNo9L-Regu,,21,21
H,9,NimbusRomNo9L-ReguItal,,1,1
0,6,NimbusRomNo9L-Regu,,1,1
) for the ˆ,9,NimbusRomNo9L-Regu,,11,11
L,9,NimbusRomNo9L-ReguItal,,1,1
m,6,NimbusRomNo9L-ReguItal,,1,1
"is that the points
follow CSR. We need to select a critical value such that if
the test is greater than that value, the test is considered to be
statistically signiﬁcant and",9,NimbusRomNo9L-Regu,,173,65
H,9,NimbusRomNo9L-ReguItal,,1,1
0,6,NimbusRomNo9L-Regu,,1,1
"is rejected. Such critical values
were estimated by Monte Carlo simulations in Ripley (1979).
The pyUPMASK algorithm uses the 1% critical value; that is,
there is a 1% probability of erroneously rejecting",9,NimbusRomNo9L-Regu,,204,59
H,9,NimbusRomNo9L-ReguItal,,1,1
0,6,NimbusRomNo9L-Regu,,1,1
"(also called
a Type I error). This critical value is approximated for ˆ",9,NimbusRomNo9L-Regu,,71,58
L,9,NimbusRomNo9L-ReguItal,,1,1
m,6,NimbusRomNo9L-ReguItal,,1,1
as,9,NimbusRomNo9L-Regu,,2,2
A,9,NimbusRomNo9L-ReguItal,,1,1
/,9,rtxmi,,1,1
N,9,NimbusRomNo9L-ReguItal,,1,1
", where",9,NimbusRomNo9L-Regu,,7,7
A,9,NimbusRomNo9L-ReguItal,,1,1
and,9,NimbusRomNo9L-Regu,,3,3
N,9,NimbusRomNo9L-ReguItal,,1,1
"are the area and number of points,
1",9,NimbusRomNo9L-Regu,,36,34
.,9,rtxmi,,1,1
"68
respectively. In future releases of the code we plan on integrat-
ing analytical expressions for the critical values, for example,",9,NimbusRomNo9L-Regu,,133,65
those obtained in Lagache et al. (2013) and Marcon et al. (2013).,9,NimbusRomNo9L-Regu,,65,65
√,9,txsy,,1,1
10,5,NimbusRomNo9L-Regu,,2,2
http://spatstat.org/,8,t1xtt,,20,20
"Article number, page 4 of 14",8,NimbusRomNo9L-Regu,,28,28
The pyUPMASK algorithm employs the,9,NimbusRomNo9L-Regu,,34,34
astropy,9,t1xtt,,7,7
"imple-
mentation of the K function, which includes the required edge
corrections for points that are located close to the domain bound-
aries. Compared to the UPMASK KDE test, the K function is not
only a more natural choice for this task, it is also orders of mag-
nitude faster.",9,NimbusRomNo9L-Regu,,280,67
2.2.3. Gaussian-Uniform mixture model,9,NimbusSanL-Regu,,37,37
"After the RFR block is ﬁnished and the fake clusters are re-
jected, only those stars that were found in clusters su",9,NimbusRomNo9L-Regu,,116,60
ﬃ,9,rtxr,,1,1
"ciently
di",9,NimbusRomNo9L-Regu,,10,7
ﬀ,9,rtxr,,1,1
"erent from a random uniform distribution of points are kept.
This dataset of stars is nonetheless still a",9,NimbusRomNo9L-Regu,,105,60
ﬀ,9,rtxr,,1,1
"ected by contami-
nation from ﬁeld stars that could not be removed. This is be-
cause these ﬁeld stars were, by chance, associated with a cluster
composed mainly of true star cluster members and thus not re-
jected. We developed a method to clean this region, applied to
the two-dimensional coordinates space that we call GUMM, be-
cause it based on ﬁtting a Gaussian-uniform mixture model to
the dataset. This can be thought of as a simpler version of the
spatial plus proper motions space modelization found in previ-
ous works, for example, Jones & Walker (1988).",9,NimbusRomNo9L-Regu,,566,65
A,9,NimbusRomNo9L-Regu,,1,1
D,9,NimbusRomNo9L-ReguItal,,1,1
-dimensional Gaussian distribution can be written as,9,NimbusRomNo9L-Regu,,52,52
N,9,txsy,,1,1
(,9,NimbusRomNo9L-Regu,,1,1
x,9,NimbusRomNo9L-Medi,,1,1
|,9,txsy,,1,1
"µ,",9,rtxmi,,2,2
Σ,9,rtxr,,1,1
),9,NimbusRomNo9L-Regu,,1,1
=,9,rtxr,,1,1
1,9,NimbusRomNo9L-Regu,,1,1
(2,9,NimbusRomNo9L-Regu,,2,2
π,9,rtxmi,,1,1
),9,NimbusRomNo9L-Regu,,1,1
D,6,NimbusRomNo9L-ReguItal,,1,1
/,6,rtxmi,,1,1
2,6,NimbusRomNo9L-Regu,,1,1
|,9,txsy,,1,1
Σ,9,rtxr,,1,1
|,9,txsy,,1,1
1,6,NimbusRomNo9L-Regu,,1,1
/,6,rtxmi,,1,1
2,6,NimbusRomNo9L-Regu,,1,1
exp,9,NimbusRomNo9L-Regu,,3,3
,9,txex,,0,0
−,9,txsy,,1,1
1,9,NimbusRomNo9L-Regu,,1,1
2,9,NimbusRomNo9L-Regu,,1,1
,9,txex,,0,0
(,9,NimbusRomNo9L-Regu,,1,1
x,9,NimbusRomNo9L-Medi,,1,1
−,9,txsy,,1,1
µ,9,rtxmi,,1,1
),9,NimbusRomNo9L-Regu,,1,1
T,6,NimbusRomNo9L-ReguItal,,1,1
Σ,9,rtxr,,1,1
−,6,txsy,,1,1
1,6,NimbusRomNo9L-Regu,,1,1
(,9,NimbusRomNo9L-Regu,,1,1
x,9,NimbusRomNo9L-Medi,,1,1
−,9,txsy,,1,1
µ,9,rtxmi,,1,1
),9,NimbusRomNo9L-Regu,,1,1
",",9,rtxmi,,1,1
where,9,NimbusRomNo9L-Regu,,5,5
x,9,NimbusRomNo9L-Medi,,1,1
is the,9,NimbusRomNo9L-Regu,,6,6
D,9,NimbusRomNo9L-ReguItal,,1,1
"-dimensional data vector, and (",9,NimbusRomNo9L-Regu,,31,31
"µ,",9,rtxmi,,2,2
Σ,9,rtxr,,1,1
") are the mean
and covariance matrix. A GMM with",9,NimbusRomNo9L-Regu,,48,33
K,9,NimbusRomNo9L-ReguItal,,1,1
"components (i.e., Gaus-
sians) is deﬁned as",9,NimbusRomNo9L-Regu,,43,23
ρ,9,rtxmi,,1,1
GMM,6,NimbusRomNo9L-ReguItal,,3,3
=,9,rtxr,,1,1
π,9,rtxmi,,1,1
i,6,NimbusRomNo9L-ReguItal,,1,1
N,9,txsy,,1,1
(,9,NimbusRomNo9L-Regu,,1,1
x,9,NimbusRomNo9L-Medi,,1,1
|,9,txsy,,1,1
µ,9,rtxmi,,1,1
i,6,NimbusRomNo9L-ReguItal,,1,1
",",9,rtxmi,,1,1
Σ,9,rtxr,,1,1
i,6,NimbusRomNo9L-ReguItal,,1,1
),9,NimbusRomNo9L-Regu,,1,1
",",9,rtxmi,,1,1
K,6,NimbusRomNo9L-ReguItal,,1,1
,9,txex,,0,0
i,6,NimbusRomNo9L-ReguItal,,1,1
=,6,rtxr,,1,1
1,6,NimbusRomNo9L-Regu,,1,1
where,9,NimbusRomNo9L-Regu,,5,5
π,9,rtxmi,,1,1
i,6,NimbusRomNo9L-ReguItal,,1,1
are the weights (or mixing coe,9,NimbusRomNo9L-Regu,,30,30
ﬃ,9,rtxr,,1,1
"cients) associated with
each of the",9,NimbusRomNo9L-Regu,,35,23
K,9,NimbusRomNo9L-ReguItal,,1,1
"components. Similar to the GMM, we deﬁne the
GUMM as a two-dimensional mixture model composed of a
Gaussian, representing the stellar cluster, and a uniform distri-
bution, representing the noise due to contaminating ﬁeld stars.
The full model is then written as",9,NimbusRomNo9L-Regu,,262,65
ρ,9,rtxmi,,1,1
GU MM,6,NimbusRomNo9L-ReguItal,,5,5
=,9,rtxr,,1,1
π,9,rtxmi,,1,1
0,6,NimbusRomNo9L-Regu,,1,1
N,9,txsy,,1,1
(,9,NimbusRomNo9L-Regu,,1,1
x,9,NimbusRomNo9L-Medi,,1,1
|,9,txsy,,1,1
"µ,",9,rtxmi,,2,2
Σ,9,rtxr,,1,1
),9,NimbusRomNo9L-Regu,,1,1
+,9,rtxr,,1,1
π,9,rtxmi,,1,1
1,6,NimbusRomNo9L-Regu,,1,1
U,9,NimbusRomNo9L-ReguItal,,1,1
[0,9,NimbusRomNo9L-Regu,,2,2
",",9,rtxmi,,1,1
1],9,NimbusRomNo9L-Regu,,2,2
",",9,rtxmi,,1,1
where,9,NimbusRomNo9L-Regu,,5,5
U,9,NimbusRomNo9L-ReguItal,,1,1
[0,9,NimbusRomNo9L-Regu,,2,2
",",9,rtxmi,,1,1
1] is the uniform distribution in the range [0,9,NimbusRomNo9L-Regu,,46,46
",",9,rtxmi,,1,1
"1], and",9,NimbusRomNo9L-Regu,,7,7
π,9,rtxmi,,1,1
x,6,NimbusRomNo9L-ReguItal,,1,1
(,9,NimbusRomNo9L-Regu,,1,1
x,9,NimbusRomNo9L-ReguItal,,1,1
=,9,rtxr,,1,1
0,9,NimbusRomNo9L-Regu,,1,1
",",9,rtxmi,,1,1
1) are the unknown weights for each model. No restric-,9,NimbusRomNo9L-Regu,,54,54
"tions are imposed on the position, shape, or extension of the 2D",9,NimbusRomNo9L-Regu,,64,64
"Gaussian representing the stellar cluster. Following the recipe
employed by the classic GMM, we use the iterative expectation-
maximization algorithm (EM, Dempster et al. 1977) to estimate
these weights as well as the mean and covariance of the 2D
Gaussian. After the EM algorithm converges to a solution, each
star is assigned a probability of belonging to the 2D Gaussian
(i.e., to the putative cluster). We then need to decide which stars
to reject as ﬁeld stars based on these probability values. To do
this the percentile distribution of the probabilities is generated
and the value at which the curve begins a sharp climb toward
large probabilities is automatically identiﬁed as the probability
cut. The value corresponding to the climb in the percentile curve",9,NimbusRomNo9L-Regu,,766,67
is estimated with the method developed in the,9,NimbusRomNo9L-Regu,,45,45
kneebow,9,t1xtt,,7,7
"pack-
age",9,NimbusRomNo9L-Regu,,9,5
11,6,NimbusRomNo9L-Regu,,2,2
. The user can input a manual value for this probability cut,9,NimbusRomNo9L-Regu,,60,60
11,5,NimbusRomNo9L-Regu,,2,2
https://github.com/georg-un/kneebow,8,t1xtt,,35,35
(4),9,NimbusRomNo9L-Regu,,3,3
(5),9,NimbusRomNo9L-Regu,,3,3
(6),9,NimbusRomNo9L-Regu,,3,3
M. S. Pera et al.: pyUPMASK: An improved unsupervised clustering algorithm,8,NimbusRomNo9L-Regu,,74,74
"on to the next segment is the hard binary classiﬁcation. This
means that only probability values of 0 and 1 are assigned up to
this stage. The KDE block takes these binary probabilities and
turns them into continuous probabilities in the range [0, 1]. This
improves the ﬁnal results in general by assigning more realistic
probability values. Furthermore,
this block is essential for
single-run clustering methods (deﬁned in Sect 2.2.1). Clustering
methods such as KMS or GMM require multiple outer loop
runs. The ﬁnal probabilities are then estimated by averaging
all the binary probability values, which breaks the binarity.
Single-run methods work, as the name indicates, on a single run
of the outer loop. This means that without this block, single-run
methods would assign probabilities of 0 and 1 exclusively.",9,NimbusRomNo9L-Regu,,814,66
"The KDE probabilities are assigned after a full run of the
inner loop, with all stars classiﬁed as either members or non-
members. The process is as follows:",9,NimbusRomNo9L-Regu,,157,62
1. Separates each of those two classes into di,9,NimbusRomNo9L-Regu,,46,46
ﬀ,9,rtxr,,1,1
"erent sets.
2. Estimate the KDE for each class, using all the available data,
that is, coordinates plus the data dimensions used for cluster-
ing (photometry, proper motions, etc.).",9,NimbusRomNo9L-Regu,,181,65
3. Evaluate all the data in the frame in the KDE obtained for,9,NimbusRomNo9L-Regu,,61,61
each class.,9,NimbusRomNo9L-Regu,,11,11
Fig. 2.,8,NimbusRomNo9L-Medi,,7,7
GUMM process in four steps. Panel a: The set of stars that sur-,8,NimbusRomNo9L-Regu,,63,63
vived the RFR block. Panel b: Probabilities assigned by the GUMM to,8,NimbusRomNo9L-Regu,,67,67
"all the stars in the frame. Panel c: The method for selecting the prob-
ability cut value using a percentile plot. Panel d: The ﬁnal set cleaned
from most of the contaminating ﬁeld stars.",8,NimbusRomNo9L-Regu,,187,72
4. Use the above evaluations as likelihood estimates in the,9,NimbusRomNo9L-Regu,,59,59
"Bayesian probability for two exclusive and exhaustive hy-
potheses (i.e., a star belongs to either the members distribu-
tion or the ﬁeld stars distribution).",9,NimbusRomNo9L-Regu,,158,62
"(or even skip the GUMM altogether), but after extensive testing
this method has proven to give very good results and it is thus the
recommended default. Stars below this value are rejected as con-
taminating ﬁeld stars and the surviving stars are kept as cluster
members.",9,NimbusRomNo9L-Regu,,271,67
"The results of processing a group of stars from a synthetic
cluster with the GUMM can be seen in Fig. 2. The plot in
panel a shows the 2D coordinates space after the RFR block
rejects those clusters; this is consistent with a random uniform
distribution. It can be seen that, even after clusters mainly
composed of ﬁeld stars are rejected, the central overdensity is
still visibly contaminated by the surrounding ﬁeld stars. The
plot in panel b shows the probabilities assigned to each star
of belonging to the 2D Gaussian via the GUMM process. In
the plot in panel c, we show the percentile diagram for the
probabilities, where the red line shows the value at which the
cut is imposed. Finally, the plot in panel d shows the region after
those stars with probabilities below the aforementioned cut are",9,NimbusRomNo9L-Regu,,802,67
rejected.,9,NimbusRomNo9L-Regu,,9,9
"This process, although almost trivial at ﬁrst glance, greatly
improves the purity of the ﬁnal sample of estimated true mem-
bers at very little cost regarding completeness. The hypothesis at
work is of course that the putative stellar cluster is more concen-
trated in the coordinates space than regular ﬁeld stars, as previ-
ously stated.",9,NimbusRomNo9L-Regu,,339,67
The ﬁnal cluster membership probability (using uniform,9,NimbusRomNo9L-Regu,,54,54
equal priors) is written as,9,NimbusRomNo9L-Regu,,27,27
P,9,NimbusRomNo9L-ReguItal,,1,1
cl,6,NimbusRomNo9L-ReguItal,,2,2
=,9,rtxr,,1,1
KDE,9,NimbusRomNo9L-ReguItal,,3,3
m,6,NimbusRomNo9L-ReguItal,,1,1
/,9,rtxmi,,1,1
(,9,NimbusRomNo9L-Regu,,1,1
KDE,9,NimbusRomNo9L-ReguItal,,3,3
m,6,NimbusRomNo9L-ReguItal,,1,1
+,9,rtxr,,1,1
KDE,9,NimbusRomNo9L-ReguItal,,3,3
nm,6,NimbusRomNo9L-ReguItal,,2,2
),9,NimbusRomNo9L-Regu,,1,1
",",9,rtxmi,,1,1
(7),9,NimbusRomNo9L-Regu,,3,3
where,9,NimbusRomNo9L-Regu,,5,5
KDE,9,NimbusRomNo9L-ReguItal,,3,3
m,6,NimbusRomNo9L-ReguItal,,1,1
and,9,NimbusRomNo9L-Regu,,3,3
KDE,9,NimbusRomNo9L-ReguItal,,3,3
nm,6,NimbusRomNo9L-ReguItal,,2,2
"are the KDE likelihoods for the mem-
bers and nonmembers (ﬁeld), respectively. The process can be
seen in Fig. 3 for the coordinates dimensions (even though it
is applied on all the data dimensions, described in Sect. 3.1).
The plot in panel a shows the two classes, members and non-
members, generated after the inner loop is ﬁnished. In the plot
in panel b, we show the two-dimensional coordinates KDEs for
both classes, noting again that this is applied on all the data di-
mensions. The plot in panel c shows the nonbinary",9,NimbusRomNo9L-Regu,,526,67
P,9,NimbusRomNo9L-ReguItal,,1,1
cl,6,NimbusRomNo9L-ReguItal,,2,2
"probabil-
ities assigned by the method in the coordinates space. Finally,
the plot in panel d is equivalent to the plot in panel c, but for the
proper motions space.",9,NimbusRomNo9L-Regu,,165,69
3. Validation of the method,10,NimbusSanL-Bold,,27,27
"In order to perform a thorough comparison of the performance of
pyUPMASK with that of UPMASK, we applied both methods to
a large number of synthetic clusters and quantiﬁed the results us-
ing numerous statistical metrics. In this section, we describe the
set of synthetic clusters, the selected metrics, and the reasoning
behind the choice of input parameters.",9,NimbusRomNo9L-Regu,,360,66
2.2.4. Kernel density estimator probabilities,9,NimbusSanL-Regu,,45,45
"Once a run of the inner loop is ﬁnished, each star in the observed
ﬁeld is classiﬁed to be either a cluster member or a ﬁeld star.
Although continuous (spatial) probabilities are assigned in the
GUMM step, these are used to apply a coarse classiﬁcation be-
tween members and nonmembers. The information that moves",9,NimbusRomNo9L-Regu,,313,66
"We employed a total of 600 synthetic clusters to analyze the per-
formance of UPMASK and pyUPMASK, the latter in the six",9,NimbusRomNo9L-Regu,,120,65
"conﬁgurations mentioned in Sect 2.2.1. This set is divided into
a subset of 320 clusters, and another of 280 clusters. The ﬁrst
subset is equivalent to that used in the original UPMASK arti-
cle (KMM14) in the sense that it is composed of clusters with",9,NimbusRomNo9L-Regu,,252,63
3.1. Synthetic datasets,9,NimbusSanL-Regu-Slant_167,,23,23
"Article number, page 5 of 14",8,NimbusRomNo9L-Regu,,28,28
A,8,NimbusRomNo9L-Regu-Slant_167,,1,1
&,8,rtxr-Slant_167,,1,1
A proofs:,8,NimbusRomNo9L-Regu-Slant_167,,9,9
manuscript no. pera_etal,8,NimbusRomNo9L-Regu,,24,24
Fig. 3.,8,NimbusRomNo9L-Medi,,7,7
KDE probabilities method shown in the coordinates space. Panel,8,NimbusRomNo9L-Regu,,62,62
"a: Members and nonmembers, as estimated by the inner loop process.",8,NimbusRomNo9L-Regu,,66,66
Panel b: KDEs for both classes. Panel c: Final,8,NimbusRomNo9L-Regu,,46,46
P,8,NimbusRomNo9L-ReguItal,,1,1
cl,5,NimbusRomNo9L-ReguItal,,2,2
"probabilities assigned
in the coordinates space. Panel d: Same as panel c, but for proper mo-
tions.",8,NimbusRomNo9L-Regu,,100,70
"synthetic photometry generated with the same process as that
used in KMM14. We refer to this subset as PHOT hereinafter.
The second subset contains 280 clusters generated by adding
synthetic proper motions to all the stars in the frame; we re-
fer to this subset as PM hereinafter. The idea is to see how
the two algorithms handle the case in which only photometry
is available (i.e., the PHOT dataset), and the increasingly com-
mon case (thanks to the Gaia mission) in which proper motions
with very reasonable quality are available (i.e., the PM dataset).
The performance of UPMASK and pyUPMASK is tested using
the 600 synthetic clusters obtained by combining the PHOT and
PM datasets. Clusters were generated with a wide range of ﬁeld
star contamination. The level of contamination is measured by
the contamination index (CI), which is deﬁned as the number of
ﬁeld stars to cluster members in the frame to match the “con-
tamination rate” used in KMM14. The maximum CI in our set
of synthetic clusters is 200.",9,NimbusRomNo9L-Regu,,1013,66
In Fig. 4 we show examples of a PHOT (top) and PM (bot-,9,NimbusRomNo9L-Regu,,55,55
"tom) synthetic clusters, which are generated with moderate con-",9,NimbusRomNo9L-Regu,,63,63
tamination (CI,9,NimbusRomNo9L-Regu,,14,14
≈,9,txsy,,1,1
50).,9,NimbusRomNo9L-Regu,,4,4
3.2. Performance metrics,9,NimbusSanL-Regu-Slant_167,,24,24
"A proper choice for evaluating the classiﬁcation performance of
a probabilistic model (such as UPMASK or pyUPMASK) is a
debate that carries on even today (Hand 2009; Hernández-Orallo
et al. 2012). Di",9,NimbusRomNo9L-Regu,,199,63
ﬀ,9,rtxr,,1,1
erent metrics or scoring rules yield di,9,NimbusRomNo9L-Regu,,39,39
ﬀ,9,rtxr,,1,1
"erent re-
sults regarding the performance of the model (Merkle & Steyvers
2013), which means that relying on a single metric is not rec-
ommended. This is particularly true when dealing with datasets",9,NimbusRomNo9L-Regu,,199,63
"that can be highly imbalanced, as is our case. We thus chose to
employ multiple metrics. By combining all of these, we expect
to obtain a non-biased assessment of the overall performance of
pyUPMASK versus UPMASK.",9,NimbusRomNo9L-Regu,,213,63
"Article number, page 6 of 14",8,NimbusRomNo9L-Regu,,28,28
Fig. 4.,8,NimbusRomNo9L-Medi,,7,7
"Top row: Coordinates and CMD for a PHOT synthetic cluster
with moderate CI. Bottom row: Coordinates and vector-point diagram
for a PM synthetic cluster with moderate CI.",8,NimbusRomNo9L-Regu,,169,66
"We selected six metrics that can be divided into two groups
of three each. The ﬁrst group consists of strictly proper scoring
rules, which guarantee that they are only optimized when the
true classiﬁcation is obtained. This group is composed of the
following metrics:",9,NimbusRomNo9L-Regu,,267,65
Logarithmic scoring rule:,9,NimbusRomNo9L-Regu,,25,25
LS R,9,NimbusRomNo9L-ReguItal,,4,4
=,9,rtxr,,1,1
1,9,NimbusRomNo9L-Regu,,1,1
+,9,rtxr,,1,1
1,9,NimbusRomNo9L-Regu,,1,1
N,9,NimbusRomNo9L-ReguItal,,1,1
N,6,NimbusRomNo9L-ReguItal,,1,1
,9,txex,,0,0
i,6,NimbusRomNo9L-ReguItal,,1,1
=,6,rtxr,,1,1
1,6,NimbusRomNo9L-Regu,,1,1
y,9,NimbusRomNo9L-ReguItal,,1,1
true,6,NimbusRomNo9L-ReguItal,,4,4
log(,9,NimbusRomNo9L-Regu,,4,4
p,9,NimbusRomNo9L-ReguItal,,1,1
),9,NimbusRomNo9L-Regu,,1,1
+,9,rtxr,,1,1
(1,9,NimbusRomNo9L-Regu,,2,2
−,9,txsy,,1,1
y,9,NimbusRomNo9L-ReguItal,,1,1
true,6,NimbusRomNo9L-ReguItal,,4,4
) log(1,9,NimbusRomNo9L-Regu,,7,7
−,9,txsy,,1,1
p,9,NimbusRomNo9L-ReguItal,,1,1
),9,NimbusRomNo9L-Regu,,1,1
",",9,rtxmi,,1,1
(8),9,NimbusRomNo9L-Regu,,3,3
where,9,NimbusRomNo9L-Regu,,5,5
N,9,NimbusRomNo9L-ReguItal,,1,1
"is the number of elements,",9,NimbusRomNo9L-Regu,,26,26
y,9,NimbusRomNo9L-ReguItal,,1,1
true,6,NimbusRomNo9L-ReguItal,,4,4
∈ {,9,txsy,,3,3
0,9,NimbusRomNo9L-Regu,,1,1
",",9,rtxmi,,1,1
1,9,NimbusRomNo9L-Regu,,1,1
},9,txsy,,1,1
"is the true
label, and",9,NimbusRomNo9L-Regu,,22,11
p,9,NimbusRomNo9L-ReguItal,,1,1
=,9,rtxr,,1,1
Pr(,9,NimbusRomNo9L-Regu,,3,3
y,9,NimbusRomNo9L-ReguItal,,1,1
=,9,rtxr,,1,1
1) is the probability that,9,NimbusRomNo9L-Regu,,26,26
y,9,NimbusRomNo9L-ReguItal,,1,1
=,9,rtxr,,1,1
"1, that is, the
probability that the element belongs to the class identiﬁed with a
1 (Good 1952). The LSR (also called log-loss or cross-entropy)
heavily penalizes large di",9,NimbusRomNo9L-Regu,,172,66
ﬀ,9,rtxr,,1,1
erences between,9,NimbusRomNo9L-Regu,,15,15
y,9,NimbusRomNo9L-ReguItal,,1,1
true,6,NimbusRomNo9L-ReguItal,,4,4
and,9,NimbusRomNo9L-Regu,,3,3
p,9,NimbusRomNo9L-ReguItal,,1,1
.,9,NimbusRomNo9L-Regu,,1,1
Brier score loss:,9,NimbusRomNo9L-Regu,,17,17
BS L,9,NimbusRomNo9L-ReguItal,,4,4
=,9,rtxr,,1,1
1,9,NimbusRomNo9L-Regu,,1,1
−,9,txsy,,1,1
(,9,NimbusRomNo9L-Regu,,1,1
p,9,NimbusRomNo9L-ReguItal,,1,1
−,9,txsy,,1,1
y,9,NimbusRomNo9L-ReguItal,,1,1
true,6,NimbusRomNo9L-ReguItal,,4,4
),9,NimbusRomNo9L-Regu,,1,1
2,6,NimbusRomNo9L-Regu,,1,1
",",9,rtxmi,,1,1
1,9,NimbusRomNo9L-Regu,,1,1
N,9,NimbusRomNo9L-ReguItal,,1,1
N,6,NimbusRomNo9L-ReguItal,,1,1
,9,txex,,0,0
i,6,NimbusRomNo9L-ReguItal,,1,1
=,6,rtxr,,1,1
1,6,NimbusRomNo9L-Regu,,1,1
H measure:,9,NimbusRomNo9L-Regu,,10,10
HMS,9,NimbusRomNo9L-ReguItal,,3,3
=,9,rtxr,,1,1
1,9,NimbusRomNo9L-Regu,,1,1
−,9,txsy,,1,1
"L
L",9,NimbusRomNo9L-ReguItal,,3,1
max,6,NimbusRomNo9L-ReguItal,,3,3
",",9,rtxmi,,1,1
"which is equivalent
classiﬁcation; it was originally introduced in Brier (1950).",9,NimbusRomNo9L-Regu,,80,60
to the mean squared error for binary,9,NimbusRomNo9L-Regu,,36,36
(9),9,NimbusRomNo9L-Regu,,3,3
(10),9,NimbusRomNo9L-Regu,,4,4
where,9,NimbusRomNo9L-Regu,,5,5
L,9,NimbusRomNo9L-ReguItal,,1,1
"is the loss function, and",9,NimbusRomNo9L-Regu,,25,25
L,9,NimbusRomNo9L-ReguItal,,1,1
max,6,NimbusRomNo9L-ReguItal,,3,3
"is the maximum loss;
the expression for the loss function is much too mathematically
involved to be presented here, it can be seen in full in Hand",9,NimbusRomNo9L-Regu,,146,63
"(2009). This is a relatively new metric. It was developed as
a replacement of the popular AUC (area under the receiver
operating characteristic curve) score; now known to be an inco-
herent performance measure and thus not recommended (Lobo",9,NimbusRomNo9L-Regu,,240,63
M. S. Pera et al.: pyUPMASK: An improved unsupervised clustering algorithm,8,NimbusRomNo9L-Regu,,74,74
"et al. 2008; Parker 2011; Hand & Anagnostopoulos 2014). The
HMS automatically handles unbalanced classes by treating the
misclassiﬁcation of the smaller class (in our case almost always
true members, except for extremely low CI values) as more
serious than those of the larger class.",9,NimbusRomNo9L-Regu,,283,64
"It is worth noting that the deﬁnitions of LSR and BSL were
altered from their original forms by multiplying by -1 and
adding plus 1. This way all the metrics deﬁned assign 1 to a
perfect score.",9,NimbusRomNo9L-Regu,,193,60
"The three metrics in the ﬁrst group can be used directly on
the membership probabilities in the [0, 1] range, resulting from
UPMASK or pyUPMASK. The second group deﬁned below
consists of scoring rules that are applied to binary classiﬁers.
These are the types of metrics used in the original KMM14
article and we employ them in this work for consistency",9,NimbusRomNo9L-Regu,,353,64
12,6,NimbusRomNo9L-Regu,,2,2
". In
the deﬁnitions that follow TP is a true positive (a member star
correctly classiﬁed as such), TN is a true negative (a ﬁeld star
correctly classiﬁed as such), FN is a false negative (a member
star incorrectly classiﬁed as ﬁeld), and FP is a false positive (a
ﬁeld star incorrectly classiﬁed as member):",9,NimbusRomNo9L-Regu,,307,66
True positive rate:,9,NimbusRomNo9L-Regu,,19,19
T PR,9,NimbusRomNo9L-ReguItal,,4,4
=,9,rtxr,,1,1
"T P
T P",9,NimbusRomNo9L-ReguItal,,7,3
+,9,rtxr,,1,1
FN,9,NimbusRomNo9L-ReguItal,,2,2
",",9,rtxmi,,1,1
Positive predictive value:,9,NimbusRomNo9L-Regu,,26,26
PPV,9,NimbusRomNo9L-ReguItal,,3,3
=,9,rtxr,,1,1
"T P
T P",9,NimbusRomNo9L-ReguItal,,7,3
+,9,rtxr,,1,1
FP,9,NimbusRomNo9L-ReguItal,,2,2
",",9,rtxmi,,1,1
"which is also called sensitivity or recall; it measures the propor-
tion of true members that are correctly identiﬁed.",9,NimbusRomNo9L-Regu,,118,67
"which is also called precision; it measures how many stars
classiﬁed as members are true members.",9,NimbusRomNo9L-Regu,,97,58
Matthews correlation coe,9,NimbusRomNo9L-Regu,,24,24
ﬃ,9,rtxr,,1,1
cient:,9,NimbusRomNo9L-Regu,,6,6
MCC,9,NimbusRomNo9L-ReguItal,,3,3
=,9,rtxr,,1,1
√,9,txsy,,1,1
T P,9,NimbusRomNo9L-ReguItal,,3,3
×,9,txsy,,1,1
T N,9,NimbusRomNo9L-ReguItal,,3,3
−,9,txsy,,1,1
FP,9,NimbusRomNo9L-ReguItal,,2,2
×,9,txsy,,1,1
FN,9,NimbusRomNo9L-ReguItal,,2,2
(,9,NimbusRomNo9L-Regu,,1,1
T P,9,NimbusRomNo9L-ReguItal,,3,3
+,9,rtxr,,1,1
FP,9,NimbusRomNo9L-ReguItal,,2,2
)(,9,NimbusRomNo9L-Regu,,2,2
T P,9,NimbusRomNo9L-ReguItal,,3,3
+,9,rtxr,,1,1
FN,9,NimbusRomNo9L-ReguItal,,2,2
)(,9,NimbusRomNo9L-Regu,,2,2
T N,9,NimbusRomNo9L-ReguItal,,3,3
+,9,rtxr,,1,1
FP,9,NimbusRomNo9L-ReguItal,,2,2
)(,9,NimbusRomNo9L-Regu,,2,2
T N,9,NimbusRomNo9L-ReguItal,,3,3
+,9,rtxr,,1,1
FN,9,NimbusRomNo9L-ReguItal,,2,2
),9,NimbusRomNo9L-Regu,,1,1
",",9,rtxmi,,1,1
(13),9,NimbusRomNo9L-Regu,,4,4
which was introduced in Matthews (1975); it can be thought,9,NimbusRomNo9L-Regu,,58,58
to Pearson’s correlation coe,9,NimbusRomNo9L-Regu,,28,28
ﬃ,9,rtxr,,1,1
"cient for
of as an equivalent",9,NimbusRomNo9L-Regu,,29,19
"binary classiﬁers. Unlike the TPR and PPV, the MCC also takes
the TNs into account. It is recommended when dealing with
imbalanced classes, as is our case.",9,NimbusRomNo9L-Regu,,155,61
"To turn the problem into one of binary classiﬁcation and to be
able to use the three metrics deﬁned in the second group, we
must ﬁrst select a probability threshold that separates the stars
into the members and nonmembers classes. In KMM14 a single
threshold of 90% was used. Since the choice of a threshold can
a",9,NimbusRomNo9L-Regu,,313,65
ﬀ,9,rtxr,,1,1
"ect the results from these three metrics, we decided to use the
following two di",9,NimbusRomNo9L-Regu,,80,63
ﬀ,9,rtxr,,1,1
erent thresholds: 50% and 90%. This way we,9,NimbusRomNo9L-Regu,,42,42
"end up with the following nine metrics to test the performance
of UPMASK and pyUPMASK: LSR, BSL, HMS, TPR",9,NimbusRomNo9L-Regu,,105,62
5,6,NimbusRomNo9L-Regu,,1,1
", PPV",9,NimbusRomNo9L-Regu,,5,5
5,6,NimbusRomNo9L-Regu,,1,1
",
MCC",9,NimbusRomNo9L-Regu,,5,3
5,6,NimbusRomNo9L-Regu,,1,1
", TPR",9,NimbusRomNo9L-Regu,,5,5
9,6,NimbusRomNo9L-Regu,,1,1
", PPV",9,NimbusRomNo9L-Regu,,5,5
9,6,NimbusRomNo9L-Regu,,1,1
", and MCC",9,NimbusRomNo9L-Regu,,9,9
9,6,NimbusRomNo9L-Regu,,1,1
"; where the subindex 5 and 9
indicate the 50% and 90% thresholds, respectively.",9,NimbusRomNo9L-Regu,,79,50
(11),9,NimbusRomNo9L-Regu,,4,4
(12),9,NimbusRomNo9L-Regu,,4,4
Fig. 5.,8,NimbusRomNo9L-Medi,,7,7
"a, b, c: Boxplot of the combined metrics di",8,NimbusRomNo9L-Regu,,43,43
ﬀ,8,rtxr,,1,1
erence vs. CI,8,NimbusRomNo9L-Regu,,13,13
for the 100 synthetic clusters used in the test. Combinations for the,8,NimbusRomNo9L-Regu,,69,69
N,8,NimbusRomNo9L-ReguItal,,1,1
15,5,NimbusRomNo9L-Regu,,2,2
",",8,rtxmi,,1,1
N,8,NimbusRomNo9L-ReguItal,,1,1
25,5,NimbusRomNo9L-Regu,,2,2
",",8,rtxmi,,1,1
N,8,NimbusRomNo9L-ReguItal,,1,1
50,5,NimbusRomNo9L-Regu,,2,2
"values are shown. Panel d: Outer loop convergence anal-
ysis. The convergence percentile of the nine metrics vs. the number of
outer loop run is shown. The black dashed line indicates the 90% con-
vergence point.",8,NimbusRomNo9L-Regu,,212,70
3.3. Input parameters selection,9,NimbusSanL-Regu-Slant_167,,31,31
"There are two main parameters in UPMASK and pyUPMASK
that a",9,NimbusRomNo9L-Regu,,59,52
ﬀ,9,rtxr,,1,1
"ect the outcome of the methods: the number of stars per
cluster and the number of runs of the outer loop. The former,
which we refer to as",9,NimbusRomNo9L-Regu,,138,61
N,9,NimbusRomNo9L-ReguItal,,1,1
clust,6,NimbusRomNo9L-ReguItal,,5,5
", was investigated in KMM14, in
which the authors concluded that a value between 10 to 25 is
appropriate. In the latest version (v1.2) of the UPMASK code,
depending on how it is run, the default value for",9,NimbusRomNo9L-Regu,,204,61
N,9,NimbusRomNo9L-ReguItal,,1,1
clust,6,NimbusRomNo9L-ReguItal,,5,5
"is either
25 or 50",9,NimbusRomNo9L-Regu,,18,9
13,6,NimbusRomNo9L-Regu,,2,2
". We performed our own tests using 100 synthetic
clusters (50 PHOT and 50 PM) covering the full CI range, se-
lected at random from the full list of 600 mentioned in Sect 3.1.
This set was analyzed with the nine performance metrics
described in Sect 3.2. In Fig. 5 we show the results obtained for
three",9,NimbusRomNo9L-Regu,,303,65
N,9,NimbusRomNo9L-ReguItal,,1,1
clust,6,NimbusRomNo9L-ReguItal,,5,5
"values 15, 25, and 50. We combined all the metrics
for the 100 synthetic clusters into one set and subtracted these
(900) values for a given",9,NimbusRomNo9L-Regu,,140,64
N,9,NimbusRomNo9L-ReguItal,,1,1
clust,6,NimbusRomNo9L-ReguItal,,5,5
value from another. The results,9,NimbusRomNo9L-Regu,,31,31
are plotted versus the CI of the synthetic clusters. From panels a,9,NimbusRomNo9L-Regu,,66,66
to c the combinations,9,NimbusRomNo9L-Regu,,21,21
N,9,NimbusRomNo9L-ReguItal,,1,1
15,6,NimbusRomNo9L-Regu,,2,2
−,9,txsy,,1,1
N,9,NimbusRomNo9L-ReguItal,,1,1
25,6,NimbusRomNo9L-Regu,,2,2
",",9,NimbusRomNo9L-Regu,,1,1
N,9,NimbusRomNo9L-ReguItal,,1,1
15,6,NimbusRomNo9L-Regu,,2,2
−,9,txsy,,1,1
N,9,NimbusRomNo9L-ReguItal,,1,1
50,6,NimbusRomNo9L-Regu,,2,2
", and",9,NimbusRomNo9L-Regu,,5,5
N,9,NimbusRomNo9L-ReguItal,,1,1
25,6,NimbusRomNo9L-Regu,,2,2
−,9,txsy,,1,1
N,9,NimbusRomNo9L-ReguItal,,1,1
50,6,NimbusRomNo9L-Regu,,2,2
"are
shown, where a positive value means that the",9,NimbusRomNo9L-Regu,,48,44
N,9,NimbusRomNo9L-ReguItal,,1,1
clust,6,NimbusRomNo9L-ReguItal,,5,5
"value on the
left performed better than the value on the right, and vice versa
for negative values. As can be seen, the di",9,NimbusRomNo9L-Regu,,122,65
ﬀ,9,rtxr,,1,1
"erences are rather
small and do not tend to change for di",9,NimbusRomNo9L-Regu,,57,38
ﬀ,9,rtxr,,1,1
"erent CI values. We thus
decided to use the middle value",9,NimbusRomNo9L-Regu,,56,31
N,9,NimbusRomNo9L-ReguItal,,1,1
clust,6,NimbusRomNo9L-ReguItal,,5,5
=,9,rtxr,,1,1
"25 for all the UPMASK
and pyUPMASK runs, as a reasonable number of default stars
per cluster for all the CI range.",9,NimbusRomNo9L-Regu,,114,58
12,5,NimbusRomNo9L-Regu,,2,2
"We note that in KMM14 the statistical measures TPR and MMR are
incorrectly deﬁned. What the authors call “TPR” is the PPV, and what
they call “MMR” is the properly deﬁned TPR.",8,NimbusRomNo9L-Regu,,175,68
13,5,NimbusRomNo9L-Regu,,2,2
It is 50 if we run the code using the,8,NimbusRomNo9L-Regu,,37,37
UPMASKfile,8,t1xtt,,10,10
"function, and 25 if
we use the",8,NimbusRomNo9L-Regu,,30,19
UPMASKdata,8,t1xtt,,10,10
function.,8,NimbusRomNo9L-Regu,,9,9
"Article number, page 7 of 14",8,NimbusRomNo9L-Regu,,28,28
A,8,NimbusRomNo9L-Regu-Slant_167,,1,1
&,8,rtxr-Slant_167,,1,1
A proofs:,8,NimbusRomNo9L-Regu-Slant_167,,9,9
manuscript no. pera_etal,8,NimbusRomNo9L-Regu,,24,24
"Deciding how many times the outer loop should run is the
other important parameter: a low number terminates the code be-
fore it is able to present fully converged probability values and
a large number wastes processing time. We processed the same
set of 100 synthetic clusters with",9,NimbusRomNo9L-Regu,,282,65
N,9,NimbusRomNo9L-ReguItal,,1,1
clust,6,NimbusRomNo9L-ReguItal,,5,5
=,9,rtxr,,1,1
"25 and analyzed when
each of the nine metrics converged to a stable value. The stabi-
lization point is deﬁned as the outer loop run where the metric
changes inside the",9,NimbusRomNo9L-Regu,,168,64
±,9,txsy,,1,1
0,9,NimbusRomNo9L-Regu,,1,1
.,9,rtxmi,,1,1
"025 range for ﬁve consecutive runs. The
results are shown in Fig. 5 d. plot as a the convergence percentile
(i.e., the percentage of clusters that have converged) for each
metric versus the outer loop run. Almost all the metrics reach
a convergence above 90% before the 25th outer loop run. The
two exceptions are TPR",9,NimbusRomNo9L-Regu,,317,67
9,6,NimbusRomNo9L-Regu,,1,1
and PPV,9,NimbusRomNo9L-Regu,,7,7
9,6,NimbusRomNo9L-Regu,,1,1
", which still show a conver-
gence above 85% before the 25th run. Given these results we use
25 runs in the outer loop for all the UPMASK and pyUPMASK
analyses with the obvious exceptions of the single-run methods
described in Sect 2.2.1.",9,NimbusRomNo9L-Regu,,238,63
"The PHOT set was processed using all the available photom-
etry as input (",9,NimbusRomNo9L-Regu,,74,58
V,9,NimbusRomNo9L-ReguItal,,1,1
",",9,rtxmi,,1,1
B,9,NimbusRomNo9L-ReguItal,,1,1
−,9,txsy,,1,1
V,9,NimbusRomNo9L-ReguItal,,1,1
",",9,rtxmi,,1,1
U,9,NimbusRomNo9L-ReguItal,,1,1
−,9,txsy,,1,1
B,9,NimbusRomNo9L-ReguItal,,1,1
",",9,rtxmi,,1,1
V,9,NimbusRomNo9L-ReguItal,,1,1
−,9,txsy,,1,1
I,9,NimbusRomNo9L-ReguItal,,1,1
",",9,rtxmi,,1,1
J,9,NimbusRomNo9L-ReguItal,,1,1
−,9,txsy,,1,1
H,9,NimbusRomNo9L-ReguItal,,1,1
",",9,rtxmi,,1,1
H,9,NimbusRomNo9L-ReguItal,,1,1
−,9,txsy,,1,1
K,9,NimbusRomNo9L-ReguItal,,1,1
") but selecting
only the four principal dimensions after the principal compo-
nent analysis dimensionality reduction. For the PM set we used
the proper motions (",9,NimbusRomNo9L-Regu,,161,62
µ,9,rtxmi,,1,1
α,6,rtxmi,,1,1
", µδ",9,rtxmi,,4,4
"), with no dimensionality reduction.
Proper motions are generally regarded as better cluster members
discriminators than photometry owing to the rounded shape of its
distribution in contrast with the irregular shape of the sequence",9,NimbusRomNo9L-Regu,,231,65
of a cluster in the photometric space.,9,NimbusRomNo9L-Regu,,38,38
4. Results,10,NimbusSanL-Bold,,10,10
"the results are comparable between the
To ensure that
pyUPMASK and UPMASK runs, all the analyses were per-
formed on the same computer cluster. In what follows, the
results are classiﬁed according to whether pyUPMASK or
UPMASK performed better for a given metric and synthetic
cluster. We allow for a small range of",9,NimbusRomNo9L-Regu,,315,57
±,9,txsy,,1,1
0,9,NimbusRomNo9L-Regu,,1,1
.,9,rtxmi,,1,1
"005 to act as a “tie
zone” in which the two methods can be thought of as performing
equally well. In Appendix A we show the results of comparing
pyUPMASK with the Bayesian method included in",9,NimbusRomNo9L-Regu,,190,62
AsteCA,9,t1xtt,,6,6
".
These are not included here because the methods are not directly
comparable, as explained in the Appendix.",9,NimbusRomNo9L-Regu,,108,64
"In Figs. 6 and 7 we show the metrics for the 320 and 280
synthetic clusters in the PHOT and PM datasets, respectively,
for each of the six clustering methods used in pyUPMASK.
The blue, yellow, and red bars depict the proportion of cases
for which pyUPMASK performed better, equally well, and for
which UPMASK performed better, respectively. It is easy to see
that, although with some variation across clustering methods,
pyUPMASK has a better performance than UPMASK for all
the methods and all the metrics, particularly for the PM dataset.
This is an outstanding result that unmistakably shows the large
improvement brought by pyUPMASK. The three methods that
apply multiple outer loop runs (MBK, KMS, GMM) show a
clear advantage over the remaining single-run methods, regard-
ing the proportion of cases for which pyUPMASK resulted in
larger metric values.",9,NimbusRomNo9L-Regu,,859,65
"In Cantat-Gaudin et al. (2018a) the authors used a modiﬁed
version of UPMASK to estimate membership probabilities
for more than 1200 cataloged clusters. The modiﬁcation was",9,NimbusRomNo9L-Regu,,172,58
"motivated by the need to increase the speed for processing
large numbers of clusters. This modiﬁcation mainly consists in
replacing the default KDE based method in the RFR block in
UPMASK for a minimum spanning tree method (see article for",9,NimbusRomNo9L-Regu,,239,62
"Article number, page 8 of 14",8,NimbusRomNo9L-Regu,,28,28
more details). We tested this modiﬁed version,9,NimbusRomNo9L-Regu,,45,45
14,6,NimbusRomNo9L-Regu,,2,2
", which we refer
to as MST, using the same set of synthetic clusters and metrics
employed so far. The code was executed with 25 runs of the
outer loop and 15 stars per cluster; internal tests showed that
this gave more adequate results than using 25.",9,NimbusRomNo9L-Regu,,250,63
"The results of our six clustering methods, plus the MST
method, versus UPMASK can be compressed into a single ma-
trix plot as shown in Fig. 8. We show the X minus UPMASK
percentage metric di",9,NimbusRomNo9L-Regu,,191,57
ﬀ,9,rtxr,,1,1
"erence, where X represents each of the
pyUPMASK clustering methods plus MST. This value is ob-
tained subtracting the number of synthetic clusters, where
pyUPMASK",9,NimbusRomNo9L-Regu,,162,58
/,9,rtxr,,1,1
"MST performed better than UPMASK, from the
number of clusters where UPMASK showed a better perfor-
mance, and taking the percentage. This di",9,NimbusRomNo9L-Regu,,140,55
ﬀ,9,rtxr,,1,1
"erence ranges from
-100, which would indicate that UPMASK performed better on
all 600 synthetic clusters, to 100, indicating that pyUPMASK
(or MST) was the better performer for the 600 clusters. A value
of 0 indicates that both methods performed better on an equal
number of cases. As can be seen, for the pyUPMASK meth-
ods all the squares in the matrix are positive (the smallest be-
ing the PPV",9,NimbusRomNo9L-Regu,,397,64
5,6,NimbusRomNo9L-Regu,,1,1
"metric for the VOR method), which again shows
that pyUPMASK performed signiﬁcantly better than UPMASK,
measured by any of the employed metrics. The advantage of the
MBK, KMS and GMM methods over the single-run methods is",9,NimbusRomNo9L-Regu,,220,61
"easier to see here compared to Figs. 6 and 7. The only exception
is the TPR",9,NimbusRomNo9L-Regu,,75,64
9,6,NimbusRomNo9L-Regu,,1,1
"metric for which the VOR, KNN, and AGG meth-
ods show a larger di",9,NimbusRomNo9L-Regu,,65,44
ﬀ,9,rtxr,,1,1
"erential than the remaining multiple-runs
methods; that is, more true members are classiﬁed as such. This
comes at the expense of the PPV",9,NimbusRomNo9L-Regu,,137,63
9,6,NimbusRomNo9L-Regu,,1,1
"metric, for which the MBK,
KMS and GMM methods show much larger values; that is, fewer
ﬁeld stars are incorrectly classiﬁed as members. Other than this,
there is no visible relation between any clustering method and a
given performance metric.",9,NimbusRomNo9L-Regu,,243,65
"The MST method shows a somewhat erratic behavior across
the metrics. It performs worse than UPMASK for almost all of
the clusters for several metrics (i.e., HMS, TPR",9,NimbusRomNo9L-Regu,,165,60
5,6,NimbusRomNo9L-Regu,,1,1
", MCC",9,NimbusRomNo9L-Regu,,5,5
9,6,NimbusRomNo9L-Regu,,1,1
"and
TPR",9,NimbusRomNo9L-Regu,,7,3
9,6,NimbusRomNo9L-Regu,,1,1
") and better for a few others (e.g. LSR and BSL). Overall,
the statistical performance of the MST method is worse than
UPMASK and pyUPMASK with any of the tested clustering
methods. Notwithstanding, MST is faster than UPMASK (as we
show below) and outperforms all other methods in the LSR and
BSL metrics.",9,NimbusRomNo9L-Regu,,305,60
for,9,NimbusRomNo9L-Regu,,3,3
In Fig. 9 we show the dependence with CI,9,NimbusRomNo9L-Regu,,40,40
"the
pyUPMASK minus UPMASK di",9,NimbusRomNo9L-Regu,,28,24
ﬀ,9,rtxr,,1,1
"erence for all the metrics, for
each clustering method. A positive value (green region) means
that pyUPMASK performed better, while a negative value
(red region) means that it performed worse than UPMASK.
The PHOT and PM sets are shown with triangles and circles,
respectively. There is no apparent trend with CI for the results
of any clustering method. What is clear is that pyUPMASK
performs even better for the PM set as evidenced by the overall
larger (more positive) di",9,NimbusRomNo9L-Regu,,475,64
ﬀ,9,rtxr,,1,1
"erences, particularly for clusters with
large CI values. This is a very desirable result taking into
account that high quality proper motions are becoming more
accessible very fast.",9,NimbusRomNo9L-Regu,,181,60
"We can further compress the results by combining each
metric into a single value, for each of the clustering methods",9,NimbusRomNo9L-Regu,,116,62
"tested in pyUPMASK. That is, we take the 5400 results for
each clustering method (600 synthetic clusters times nine",9,NimbusRomNo9L-Regu,,115,57
14,5,NimbusRomNo9L-Regu,,2,2
Thanks to Dr Cantat-Gaudin who shared the code with us.,8,NimbusRomNo9L-Regu,,55,55
M. S. Pera et al.: pyUPMASK: An improved unsupervised clustering algorithm,8,NimbusRomNo9L-Regu,,74,74
Fig. 6.,8,NimbusRomNo9L-Medi,,7,7
"Results for the 320 synthetic clusters in the PHOT dataset processed with the six clustering methods used in pyUPMASK vs. UPMASK. For
each metric, the blue and red bars represent the cases where pyUPMASK and UPMASK performed better, respectively. The yellow bars represent
cases in which both methods performed equally well.",8,NimbusRomNo9L-Regu,,324,138
Fig. 7.,8,NimbusRomNo9L-Medi,,7,7
"Same as Fig. 6 but for the 280 synthetic clusters in the PM dataset, exclusively.",8,NimbusRomNo9L-Regu,,81,81
Table 1.,8,NimbusRomNo9L-Medi,,8,8
"Aggregated results for all the metrics and all the synthetic clus-
ters, for the six pyUPMASK clustering methods used, as percentage of
results where pyUPMASK outperformed UPMASK, and vice versa, re-
spectively. The missing percentage to add up to 100 corresponds to ties.
The second rows for each method show the minimum and maximum
percentage values obtained for any single metric (shown in parenthe-
sis), for that method.",8,NimbusRomNo9L-Regu,,425,72
Method,9,NimbusRomNo9L-Regu,,6,6
VOR,9,NimbusRomNo9L-Regu,,3,3
KNN,9,NimbusRomNo9L-Regu,,3,3
AGG,9,NimbusRomNo9L-Regu,,3,3
MBK,9,NimbusRomNo9L-Regu,,3,3
KMS,9,NimbusRomNo9L-Regu,,3,3
GMM,9,NimbusRomNo9L-Regu,,3,3
"pyUPMASK
min",9,NimbusRomNo9L-Regu,,12,8
|,9,rtxr,,1,1
"max
66
55 (BSL)",9,NimbusRomNo9L-Regu,,15,8
|,9,rtxr,,1,1
78 (TPR,9,NimbusRomNo9L-Regu,,7,7
9,6,NimbusRomNo9L-Regu,,1,1
")
68
57 (BSL)",9,NimbusRomNo9L-Regu,,13,8
|,9,rtxr,,1,1
85 (TPR,9,NimbusRomNo9L-Regu,,7,7
9,6,NimbusRomNo9L-Regu,,1,1
")
72
59 (BSL)",9,NimbusRomNo9L-Regu,,13,8
|,9,rtxr,,1,1
90 (TPR,9,NimbusRomNo9L-Regu,,7,7
9,6,NimbusRomNo9L-Regu,,1,1
")
77
51 (TPR",9,NimbusRomNo9L-Regu,,12,7
9,6,NimbusRomNo9L-Regu,,1,1
),9,NimbusRomNo9L-Regu,,1,1
|,9,rtxr,,1,1
90 (MCC,9,NimbusRomNo9L-Regu,,7,7
5,6,NimbusRomNo9L-Regu,,1,1
")
79",9,NimbusRomNo9L-Regu,,4,2
66 (TPR,9,NimbusRomNo9L-Regu,,7,7
9,6,NimbusRomNo9L-Regu,,1,1
),9,NimbusRomNo9L-Regu,,1,1
|,9,rtxr,,1,1
"88 (HMS)
83
74 (TPR",9,NimbusRomNo9L-Regu,,19,8
9,6,NimbusRomNo9L-Regu,,1,1
),9,NimbusRomNo9L-Regu,,1,1
|,9,rtxr,,1,1
93 (HMS),9,NimbusRomNo9L-Regu,,8,8
"UPMASK
min",9,NimbusRomNo9L-Regu,,10,6
|,9,rtxr,,1,1
"max
29
13 (TPR",9,NimbusRomNo9L-Regu,,14,7
9,6,NimbusRomNo9L-Regu,,1,1
),9,NimbusRomNo9L-Regu,,1,1
|,9,rtxr,,1,1
42 (PPV,9,NimbusRomNo9L-Regu,,7,7
5,6,NimbusRomNo9L-Regu,,1,1
")
27
8 (TPR",9,NimbusRomNo9L-Regu,,11,6
9,6,NimbusRomNo9L-Regu,,1,1
),9,NimbusRomNo9L-Regu,,1,1
|,9,rtxr,,1,1
40 (PPV,9,NimbusRomNo9L-Regu,,7,7
5,6,NimbusRomNo9L-Regu,,1,1
")
24
4 (TPR",9,NimbusRomNo9L-Regu,,11,6
9,6,NimbusRomNo9L-Regu,,1,1
),9,NimbusRomNo9L-Regu,,1,1
|,9,rtxr,,1,1
38 (PPV,9,NimbusRomNo9L-Regu,,7,7
5,6,NimbusRomNo9L-Regu,,1,1
")
16
8 (HMS)",9,NimbusRomNo9L-Regu,,12,7
|,9,rtxr,,1,1
36 (TPR,9,NimbusRomNo9L-Regu,,7,7
9,6,NimbusRomNo9L-Regu,,1,1
")
15",9,NimbusRomNo9L-Regu,,4,2
8 (PPV,9,NimbusRomNo9L-Regu,,6,6
9,6,NimbusRomNo9L-Regu,,1,1
),9,NimbusRomNo9L-Regu,,1,1
|,9,rtxr,,1,1
22 (TPR,9,NimbusRomNo9L-Regu,,7,7
9,6,NimbusRomNo9L-Regu,,1,1
")
11
5 (HMS)",9,NimbusRomNo9L-Regu,,12,7
|,9,rtxr,,1,1
16 (LSR),9,NimbusRomNo9L-Regu,,8,8
"metrics) and calculate the percentage at which pyUPMASK
outperformed UPMASK. The same process can be applied
to the synthetic clusters for which UPMASK outperformed
pyUPMASK to obtain a similar,
inverted, percentage. The
results are shown in Table 1. This table shows that even the
worst pyUPMASK performer (VOR) gives better metrics than",9,NimbusRomNo9L-Regu,,338,60
UPMASK 66% of the times. The method with the highest,9,NimbusRomNo9L-Regu,,52,52
"pyUPMASK percentage (GMM) outperforms UPMASK 83%
of the times, which is a massive advantage. The worst individual
metric result is obtained for TPR",9,NimbusRomNo9L-Regu,,147,64
9,6,NimbusRomNo9L-Regu,,1,1
"in the MBK method. Still the
value is larger than 50%, which means that the majority of the
cases were better handled by pyUPMASK. On the other end
of the analysis the best metric result is found for HMS in the
GMM method, for which pyUPMASK manages to outperform
UPMASK for virtually all of the cases.",9,NimbusRomNo9L-Regu,,302,62
Another,9,NimbusRomNo9L-Regu,,7,7
"important aspect along with the performance
measured by the statistical metrics is the performance measured",9,NimbusRomNo9L-Regu,,107,63
"in computing time. This is shown in Fig. 10 as a bar plot
normalized to the total time used by UPMASK to process the
600 synthetic clusters. The numbers on top of the bars displays
how many times faster each clustering method in pyUPMASK is",9,NimbusRomNo9L-Regu,,240,63
"Article number, page 9 of 14",8,NimbusRomNo9L-Regu,,28,28
A,8,NimbusRomNo9L-Regu-Slant_167,,1,1
&,8,rtxr-Slant_167,,1,1
A proofs:,8,NimbusRomNo9L-Regu-Slant_167,,9,9
manuscript no. pera_etal,8,NimbusRomNo9L-Regu,,24,24
makes it extremely e,9,NimbusRomNo9L-Regu,,20,20
ﬃ,9,rtxr,,1,1
"cient, thus making the pyUPMASK VOR
method very e",9,NimbusRomNo9L-Regu,,49,35
ﬃ,9,rtxr,,1,1
cient for large datasets.,9,NimbusRomNo9L-Regu,,25,25
To test this we downloaded a large 6,9,NimbusRomNo9L-Regu,,36,36
×,9,txsy,,1,1
"6 deg region around
the NGC2516 cluster from the Gaia second data release (Gaia
Collaboration et al. 2018). The resulting ﬁeld contains over
420000 stars up to a maximum magnitude of",9,NimbusRomNo9L-Regu,,182,60
G,9,NimbusRomNo9L-ReguItal,,1,1
=,9,rtxr,,1,1
"19 mag. This
limit was imposed because beyond this value the photometric
errors grow exponentially. The frame was processed with the six
tested pyUPMASK clustering methods and UPMASK, using
proper motions and parallax as input data. We used 25 outer
loop iterations for all the methods, except of course for the
single-run methods, and a value of 25 for the parameter that
determines the number of elements per cluster (i.e., the default
values for both parameters as explained in Sect. 3.3).",9,NimbusRomNo9L-Regu,,492,64
"Only three methods were able to complete the process:
VOR, KNN, and MBK. The methods AGG, KMS, and GMM
failed owing to memory requirements as they attempted to
allocate arrays of",9,NimbusRomNo9L-Regu,,178,56
∼,9,txsy,,1,1
"640 Gb,",9,NimbusRomNo9L-Regu,,7,7
∼,9,txsy,,1,1
"31 Gb, and",9,NimbusRomNo9L-Regu,,10,10
∼,9,txsy,,1,1
"31 Gb on memory,
respectively. The UPMASK algorithm was not able to ﬁnish
even the ﬁrst iteration of the inner loop within the ﬁrst iteration
of the outer loop after a full week of running, so it was halted.
The results of the VOR, KNN, and MBK methods can be seen
in a color-magnitude diagram (CMD) in Fig. 11. We plotted the
1500 stars with larger membership probabilities given by each",9,NimbusRomNo9L-Regu,,388,67
"method, as this is the approximate number of cluster members
in the frame (given by a simple stellar density analysis). It is
evident that the VOR method returns the most reasonable and
less contaminated CMD out of the three. Furthermore, this
method managed to process the cluster almost 4 and 40 times
faster than KNN and MBK, respectively. It is worth noting that
on a personal computer, which has far less resources than a
computational cluster, VOR was the only method that was able
to run.",9,NimbusRomNo9L-Regu,,495,64
"A smaller ﬁeld containing this same cluster was analyzed
with UPMASK in Cantat-Gaudin et al. (2018a). The processed
area contains only",9,NimbusRomNo9L-Regu,,134,58
∼,9,txsy,,1,1
"1100 stars associated with this cluster up
to a magnitude of G",9,NimbusRomNo9L-Regu,,62,42
=,9,rtxr,,1,1
"18 mag. The analysis done in this work
resulted in less than 800 stars with membership probabilities
(MPs) above 0.5 and",9,NimbusRomNo9L-Regu,,120,61
∼,9,txsy,,1,1
100 stars with MPs,9,NimbusRomNo9L-Regu,,18,18
>,9,rtxmi,,1,1
0,9,NimbusRomNo9L-Regu,,1,1
.,9,rtxmi,,1,1
"9. In contrast,
using the same magnitude cut, we are able to obtain with
the VOR method on our very large ﬁeld over 1700 stars with
MPs",9,NimbusRomNo9L-Regu,,135,58
>,9,rtxmi,,1,1
0,9,NimbusRomNo9L-Regu,,1,1
.,9,rtxmi,,1,1
"99 tracing a well-deﬁned sequence. The advantage
of studying a cluster using almost all of its members versus
using less than 10% of the members (comparing the large MPs
subsets), is obvious.",9,NimbusRomNo9L-Regu,,191,60
The VOR method is thus the only one that was able to pro-,9,NimbusRomNo9L-Regu,,57,57
"duce quality results for this very large dataset, and it did so while
using the least amount of processing time by a wide margin.",9,NimbusRomNo9L-Regu,,129,69
5. Conclusions,10,NimbusSanL-Bold,,14,14
"Since its development in KMM14 the UPMASK code has been
used to analyze thousands of clusters. This is because it is a very
smart, general, and e",9,NimbusRomNo9L-Regu,,145,67
ﬃ,9,rtxr,,1,1
"cient unsupervised method, that requires
no prior knowledge about the observed ﬁeld. In this work we
introduced pyUPMASK, a tool based on the general UPMASK
algorithm with several added enhancements. The primary aim",9,NimbusRomNo9L-Regu,,215,59
"of pyUPMASK is the assignment of membership probabilities
to cluster stars observed in a frame contaminated by ﬁeld stars.
We tested our code extensively using 600 synthetic clusters af-
fected by a large range of contamination. Six performance met-",9,NimbusRomNo9L-Regu,,249,64
Fig. 8.,8,NimbusRomNo9L-Medi,,7,7
"Matrix plot of the six pyUPMASK clustering methods plus
MST, vs. the nine deﬁned metrics for the 600 synthetic clusters. Each
square shows the percentage di",8,NimbusRomNo9L-Regu,,156,69
ﬀ,8,rtxr,,1,1
"erence of the number of cases for
which pyUPMASK",8,NimbusRomNo9L-Regu,,48,33
/,8,rtxr,,1,1
"MST performed better, minus the number for which
UPMASK performed better.",8,NimbusRomNo9L-Regu,,73,48
"compared to UPMASK. We also show the time performance of
the MST modiﬁcation mentioned previously. The fastest method
is expectedly a single-run method, KNN, which performs 170
times faster than UPMASK. This is an enormous margin of
di",9,NimbusRomNo9L-Regu,,235,60
ﬀ,9,rtxr,,1,1
"erence. Even the slowest method, GMM,
is faster than
UPMASK: this method manages to process the set of synthetic
cluster employing almost 38% less time than UPMASK or 1.6
times faster. On average we can say that pyUPMASK using a
single-run method is over 100 times faster than UPMASK and
is more than 3 times faster for the multiple run methods.",9,NimbusRomNo9L-Regu,,345,59
"The choice between which clustering method to employ in
pyUPMASK then depends on the speciﬁc requirements of the
analysis. If the absolute best performance measured by a classi-
ﬁcation metric is sought after, then clearly GMM is the method
to chose (with the advantage of being faster than UPMASK). If
we can trade some performance for a faster process, then KMS",9,NimbusRomNo9L-Regu,,363,64
or MBK can be used. And if we are willing to trade even more,9,NimbusRomNo9L-Regu,,60,60
"classiﬁcation performance, while still performing much better
than UPMASK, then VOR, KNN, or AGG are by far the fastest
approaches.",9,NimbusRomNo9L-Regu,,131,61
"Finally, we consider the issue of computational resources re-
quirements. We found that for very large input data ﬁles memory
and processing power requirements can be too much for most
methods to handle. Although the VOR clustering method is the
worst performer out of the six tested methods (measured by clas-
siﬁcation metrics), it has an advantage compared to all the others,
including UPMASK, when it comes to analyzing large ﬁles. To
obtain the Voronoi diagram of an N-dimensional set of points,",9,NimbusRomNo9L-Regu,,500,67
the Python,9,NimbusRomNo9L-Regu,,10,10
scipy,9,t1xtt,,5,5
"package relies on the Qhull library (Barber
et al. 1996)",9,NimbusRomNo9L-Regu,,56,43
15,6,NimbusRomNo9L-Regu,,2,2
. This library is written in the C language which,9,NimbusRomNo9L-Regu,,49,49
15,5,NimbusRomNo9L-Regu,,2,2
http://www.qhull.org/,8,t1xtt,,21,21
"Article number, page 10 of 14",8,NimbusRomNo9L-Regu,,29,29
M. S. Pera et al.: pyUPMASK: An improved unsupervised clustering algorithm,8,NimbusRomNo9L-Regu,,74,74
Fig. 9.,8,NimbusRomNo9L-Medi,,7,7
Di,8,NimbusRomNo9L-Regu,,2,2
ﬀ,8,rtxr,,1,1
"erences between pyUPMASK vs. UPMASK results for all the metrics combined, vs. the CI (shown as a logarithm). Each clustering
method is shown separately, as are the PHOT and PM sets using blue triangles and black circles, respectively. The red and green regions correspond
to the regions for which pyUPMASK gives worse and better results than UPMASK, respectively.",8,NimbusRomNo9L-Regu,,363,146
//github.com/cran/hmeasure,7,t1xtt,,26,26
") R package. The authors would like to thank
Dr Cantat-Gaudin for sharing the code used in Cantat-Gaudin et al. (2018a).
M.S.P., G.I.P., and R.A.V. acknowledge the ﬁnancial support from CONICET
(PIP317) and the UNLP (PID-G148 project). AM acknowledges support from
the Portuguese Fundação para a Ciência e a Tecnologia (FCT) through the Strate-
gic Programme UID",7,NimbusRomNo9L-Regu,,362,79
/,7,rtxr,,1,1
FIS,7,NimbusRomNo9L-Regu,,3,3
/,7,rtxr,,1,1
00099,7,NimbusRomNo9L-Regu,,5,5
/,7,rtxr,,1,1
"2019 for CENTRA. This research has made use
of NASA’s Astrophysics Data System. This research made use of the Python lan-
guage (van Rossum 1995) and the following packages: NumPy",7,NimbusRomNo9L-Regu,,179,77
17,5,NimbusRomNo9L-Regu,,2,2
"(Van Der Walt
et al. 2011); SciPy",7,NimbusRomNo9L-Regu,,33,19
18,5,NimbusRomNo9L-Regu,,2,2
(Jones et al. 2001); Astropy,7,NimbusRomNo9L-Regu,,28,28
19,5,NimbusRomNo9L-Regu,,2,2
", a community-developed
core Python package for Astronomy (Astropy Collaboration et al. 2013; Price-
Whelan et al. 2018); scikit-learn",7,NimbusRomNo9L-Regu,,134,76
20,5,NimbusRomNo9L-Regu,,2,2
(Pedregosa et al. 2011b); matplotlib,7,NimbusRomNo9L-Regu,,36,36
21,5,NimbusRomNo9L-Regu,,2,2
"(Hunter
et al. 2007). This work has made use of data from the European Space Agency
(ESA) mission",7,NimbusRomNo9L-Regu,,97,75
Gaia,7,NimbusRomNo9L-ReguItal,,4,4
(,7,NimbusRomNo9L-Regu,,1,1
https://www.cosmos.esa.int/gaia,7,t1xtt,,31,31
"), processed by
the",7,NimbusRomNo9L-Regu,,19,15
Gaia,7,NimbusRomNo9L-ReguItal,,4,4
"Data Processing and Analysis Consortium (DPAC,",7,NimbusRomNo9L-Regu,,46,46
"https://www.
cosmos.esa.int/web/gaia/dpac/consortium",7,t1xtt,,52,39
"). Funding for the DPAC has
been provided by national institutions, in particular the institutions participating
in the",7,NimbusRomNo9L-Regu,,119,84
Gaia,7,NimbusRomNo9L-ReguItal,,4,4
Multilateral Agreement.,7,NimbusRomNo9L-Regu,,23,23
References,10,NimbusSanL-Bold,,10,10
"Astropy Collaboration, Robitaille, T. P., Tollerud, E. J., et al. 2013, A&A, 558,",7,NimbusRomNo9L-Regu,,81,81
"Baddeley, A., Rubak, E., & Turner, R. 2015, Spatial Point Patterns: Methodology
and Applications with R, Chapman & Hall",7,NimbusRomNo9L-Regu,,119,79
/,7,rtxr,,1,1
"CRC Interdisciplinary Statistics
(CRC Press)",7,NimbusRomNo9L-Regu,,44,32
"Balaguer-Núñez, L., López del Fresno, M., Solano, E., et al. 2020, MNRAS, 492,",7,NimbusRomNo9L-Regu,,78,78
A33,7,NimbusRomNo9L-Regu,,3,3
5811,7,NimbusRomNo9L-Regu,,4,4
"Barber, C. B., Dobkin, D. P., & Huhdanpaa, H. 1996, ACM TRANSACTIONS",7,NimbusRomNo9L-Regu,,68,68
"ON MATHEMATICAL SOFTWARE, 22, 469",7,NimbusRomNo9L-Regu,,33,33
"Baxter, R. A. 2010, Mixture Model, ed. C. Sammut & G. I. Webb (Boston, MA:",7,NimbusRomNo9L-Regu,,74,74
"Springer US), 680–682",7,NimbusRomNo9L-Regu,,21,21
"Brier, G. W. 1950, Monthly Weather Review, 78, 1
Cabrera-Cano, J. & Alfaro, E. J. 1990, A&A, 235, 94
Cantat-Gaudin, T., Jordi, C., Vallenari, A., et al. 2018a, A&A, 618, A93
Cantat-Gaudin, T., Jordi, C., Wright, N. J., et al. 2019, A&A, 626, A17
Cantat-Gaudin, T., Vallenari, A., Sordo, R., et al. 2018b, A&A, 615, A49
Carrera, R., Pasquato, M., Vallenari, A., et al. 2019, A&A, 627, A119
Dempster, A. P., Laird, N. M., & Rubin, D. B. 1977, Journal of the Royal Statis-",7,NimbusRomNo9L-Regu,,469,80
"tical Society: Series B (Methodological), 39, 1",7,NimbusRomNo9L-Regu,,47,47
17,5,NimbusRomNo9L-Regu,,2,2
http://www.numpy.org/,8,t1xtt,,21,21
18,5,NimbusRomNo9L-Regu,,2,2
http://www.scipy.org/,8,t1xtt,,21,21
19,5,NimbusRomNo9L-Regu,,2,2
http://www.astropy.org/,8,t1xtt,,23,23
20,5,NimbusRomNo9L-Regu,,2,2
http://scikit-learn.org/,8,t1xtt,,24,24
21,5,NimbusRomNo9L-Regu,,2,2
http://matplotlib.org/,8,t1xtt,,22,22
"Article number, page 11 of 14",8,NimbusRomNo9L-Regu,,29,29
Fig. 10.,8,NimbusRomNo9L-Medi,,8,8
"Amount of time employed in processing the 600 synthetic clus-
ters by each pyUPMASK method (blue bars), the MST method (or-
ange bar), and UPMASK (red bar). The bars are normalized so that
UPMASK corresponds to a total value of 1.",8,NimbusRomNo9L-Regu,,230,64
"rics were employed, three of which were in two di",9,NimbusRomNo9L-Regu,,49,49
ﬀ,9,rtxr,,1,1
erent conﬁg-,9,NimbusRomNo9L-Regu,,12,12
"urations, to ensure su",9,NimbusRomNo9L-Regu,,22,22
ﬃ,9,rtxr,,1,1
"cient coverage when assessing statistical
classiﬁcation. The results from six di",9,NimbusRomNo9L-Regu,,80,41
ﬀ,9,rtxr,,1,1
"erent clustering methods
in pyUPMASK were compared to those from UPMASK. Under
the conditions established for the analysis, the pyUPMASK tool
proved to clearly outperform UPMASK while still managing to
be faster (and, for the single-run methods, extremely faster).",9,NimbusRomNo9L-Regu,,264,62
"This new tool is thus highly conﬁgurable (around a dozen
clustering algorithms supported), fast, and an excellent per-
former measured by several metrics. The pyUPMASK algorithm
is fully written in Python and is made available for its use under
a GPL v3 general public license",9,NimbusRomNo9L-Regu,,276,66
16,6,NimbusRomNo9L-Regu,,2,2
.,9,NimbusRomNo9L-Regu,,1,1
Acknowledgements.,7,NimbusRomNo9L-ReguItal,,17,17
"The authors would like to thank the anonymous referee, for
their helpful suggestions and corrections to the manuscript. The authors would
like to thank Dr Anagnostopoulos for his help with the",7,NimbusRomNo9L-Regu,,192,78
hmeasure,7,t1xtt,,8,8
(,7,NimbusRomNo9L-Regu,,1,1
https:,7,t1xtt,,6,6
16,5,NimbusRomNo9L-Regu,,2,2
https://www.gnu.org/copyleft/gpl.html,8,t1xtt,,37,37
A,8,NimbusRomNo9L-Regu-Slant_167,,1,1
&,8,rtxr-Slant_167,,1,1
A proofs:,8,NimbusRomNo9L-Regu-Slant_167,,9,9
manuscript no. pera_etal,8,NimbusRomNo9L-Regu,,24,24
Fig. 11.,8,NimbusRomNo9L-Medi,,8,8
"Results for the NGC2516 cluster by the VOR (left), KNN (center), and MBK (right) methods. Estimated members are shown as green
circles; the ﬁeld stars are shown as gray dots.",8,NimbusRomNo9L-Regu,,174,126
"Dixon, P. M. 2014, Ripley’s K Function (American Cancer Society)
Gaia Collaboration, Brown, A. G. A., Vallenari, A., et al. 2018, A&A, 616, A1
Gaia Collaboration, Brown, A. G. A., Vallenari, A., et al. 2020, arXiv e-prints,",7,NimbusRomNo9L-Regu,,223,80
"van Rossum, G. 1995, Python tutorial, Report CS-R9526, pub-CWI, pub-",7,NimbusRomNo9L-Regu,,68,68
"Vasilevskis, S., Klemola, A., & Preston, G. 1958, The Astronomical Journal, 63,",7,NimbusRomNo9L-Regu,,79,79
arXiv:2012.01533,7,NimbusRomNo9L-Regu,,16,16
"ical), 14, 107",7,NimbusRomNo9L-Regu,,14,14
"Gaia Collaboration, Prusti, T., de Bruijne, J. H. J., et al. 2016, A&A, 595, A1
Good, I. J. 1952, Journal of the Royal Statistical Society. Series B (Methodolog-",7,NimbusRomNo9L-Regu,,161,81
"Voronoi, G. 1908, Journal für die reine und angewandte Mathematik, 1908, 97
Yontan, T., Bilir, S., Bostancı, Z. F., et al. 2019, Astrophysics and Space Science,",7,NimbusRomNo9L-Regu,,160,84
"Hand, D. & Anagnostopoulos, C. 2014, Pattern Recognition Letters, 40, 41
Hand, D. J. 2009, Machine Learning, 77, 103
Hernández-Orallo, J., Flach, P., & Ferri, C. 2012, Journal of Machine Learning",7,NimbusRomNo9L-Regu,,195,78
"Zepeda-Mendoza, M. L. & Resendis-Antonio, O. 2013, Hierarchical Agglomer-
ative Clustering, ed. W. Dubitzky, O. Wolkenhauer, K.-H. Cho, & H. Yokota
(New York, NY: Springer New York), 886–887",7,NimbusRomNo9L-Regu,,190,73
CWI:adr,7,NimbusRomNo9L-Regu,,7,7
387,7,NimbusRomNo9L-Regu,,3,3
364,7,NimbusRomNo9L-Regu,,3,3
"Research, 13, 2813",7,NimbusRomNo9L-Regu,,18,18
"Hunter, J. D. et al. 2007, Computing in science and engineering, 9, 90
Javakhishvili, G., Kukhianidze, V., Todua, M., & Inasaridze, R. 2006, Astronomy",7,NimbusRomNo9L-Regu,,150,79
"& Astrophysics, 447, 915",7,NimbusRomNo9L-Regu,,24,24
"Jones, B. F. & Walker, M. F. 1988, AJ, 95, 1755
Jones, E., Oliphant, T., Peterson, P., et al. 2001, SciPy: Open source scientiﬁc",7,NimbusRomNo9L-Regu,,128,80
"tools for Python, [Online; accessed 2016-06-21]",7,NimbusRomNo9L-Regu,,47,47
"Krone-Martins, A. & Moitinho, A. 2014, A&A, 561, A57
Lagache, T., Lang, G., Sauvonnet, N., & Olivo-Marin, J.-C. 2013, PLoS ONE,",7,NimbusRomNo9L-Regu,,127,74
"Lobo, J. M., Jiménez-Valverde, A., & Real, R. 2008, Global Ecology and Bio-",7,NimbusRomNo9L-Regu,,75,75
"8, e80914",7,NimbusRomNo9L-Regu,,9,9
"geography, 17, 145",7,NimbusRomNo9L-Regu,,18,18
"MacQueen, J. 1967, in Proceedings of the Fifth Berkeley Symposium on Mathe-
matical Statistics and Probability, Volume 1: Statistics (Berkeley, Calif.: Uni-
versity of California Press), 281–297",7,NimbusRomNo9L-Regu,,194,80
"Marcon, E., Traissac, S., & Lang, G. 2013, ISRN Ecology, 2013, 1
Matthews, B. 1975, Biochimica et Biophysica Acta (BBA) - Protein Structure,",7,NimbusRomNo9L-Regu,,140,75
"Merkle, E. C. & Steyvers, M. 2013, Decision Analysis, 10, 292
Momcheva, I. & Tollerud, E. 2015, arXiv e-prints, arXiv:1507.03989
Parker, C. 2011, in 2011 IEEE 11th International Conference on Data Mining",7,NimbusRomNo9L-Regu,,203,74
"405, 442",7,NimbusRomNo9L-Regu,,8,8
(IEEE),7,NimbusRomNo9L-Regu,,6,6
"Pedregosa, F., Varoquaux, G., Gramfort, A., et al. 2011a, Journal of Machine",7,NimbusRomNo9L-Regu,,76,76
"Pedregosa, F., Varoquaux, G., Gramfort, A., et al. 2011b, Journal of Machine",7,NimbusRomNo9L-Regu,,76,76
"Learning Research, 12, 2825",7,NimbusRomNo9L-Regu,,27,27
"Learning Research, 12, 2825",7,NimbusRomNo9L-Regu,,27,27
"Perren, G. I., Vázquez, R. A., & Piatti, A. E. 2015, A&A, 576, A6
Price-Whelan, A. M., Sip˝ocz, B. M., Günther, H. M., et al. 2018, AJ, 156, 123
Ripley, B. D. 1976, Journal of Applied Probability, 13, 255–266
Ripley, B. D. 1979, Journal of the Royal Statistical Society. Series B (Method-",7,NimbusRomNo9L-Regu,,288,79
"ological), 41, 368",7,NimbusRomNo9L-Regu,,18,18
"Rodriguez, A. & Laio, A. 2014, Science, 344, 1492
Sanders, W. L. 1971, A&A, 14, 226
Sculley, D. 2010, in Proceedings of the 19th International Conference on World
Wide Web, WWW ’10 (New York, NY, USA: Association for Computing",7,NimbusRomNo9L-Regu,,226,78
"Machinery), 1177–1178",7,NimbusRomNo9L-Regu,,21,21
"Streib, K. & Davis, J. W. 2011, in CVPR 2011, 2305–2312
Tollerud, E. J., Smith, A. M., Price-Whelan, A., et al. 2019, Bulletin of the Amer-",7,NimbusRomNo9L-Regu,,139,83
"ican Astronomical Society, 51, 180",7,NimbusRomNo9L-Regu,,34,34
"Van Der Walt, S., Colbert, S. C., & Varoquaux, G. 2011, Computing in Science",7,NimbusRomNo9L-Regu,,76,76
"& Engineering, 13, 22",7,NimbusRomNo9L-Regu,,21,21
"Article number, page 12 of 14",8,NimbusRomNo9L-Regu,,29,29
M. S. Pera et al.: pyUPMASK: An improved unsupervised clustering algorithm,8,NimbusRomNo9L-Regu,,74,74
Appendix A: pyUPMASK versus,10,NimbusSanL-Bold,,27,27
ASteCA,10,t1xbtt,,6,6
results,10,NimbusSanL-Bold,,7,7
"We present a comparison between the membership probability
estimation algorithm included in",9,NimbusRomNo9L-Regu,,91,58
ASteCA,9,t1xtt,,6,6
"and pyUPMASK. It is
worth noting that",9,NimbusRomNo9L-Regu,,37,19
ASteCA,9,t1xtt,,6,6
"is a complete package for processing
stellar clusters that includes a Bayesian membership estimation
method. This method, which has not changed since the Perren
et al. (2015) article was published, is based on comparing the
distributions of ﬁeld stars and stars within the cluster region in
whatever data space the user decides to use (photometric, proper
motions, parallax, or any combination). The cluster region is de-
ﬁned by the center coordinates and radius values estimated by
separate methods in",9,NimbusRomNo9L-Regu,,503,66
ASteCA,9,t1xtt,,6,6
"that were applied previous to the
Bayesian membership method. The pyUPMASK method (simi-
larly UPMASK), on the other hand, is a method for estimating
membership probabilities. That is, it represents just a portion of
what the",9,NimbusRomNo9L-Regu,,225,66
ASteCA,9,t1xtt,,6,6
package comprises.,9,NimbusRomNo9L-Regu,,18,18
"The reason for not including this comparison in the main ar-
ticle is that the Bayesian method in",9,NimbusRomNo9L-Regu,,97,60
ASteCA,9,t1xtt,,6,6
"and pyUPMASK are
not directly comparable. Unlike UPMASK and pyUPMASK,
the membership method
which are unsupervised methods,
included in",9,NimbusRomNo9L-Regu,,135,52
ASteCA,9,t1xtt,,6,6
"is supervised because it requires an a
priori separation of classes. That is: the ﬁeld stars, identiﬁed as
those stars located in the ﬁeld region, and the possible cluster
members, identiﬁed as those stars located in the cluster region,",9,NimbusRomNo9L-Regu,,236,67
"must be segregated before the membership method can be
applied. Hence, the membership probabilities obtained with the
Bayesian method in",9,NimbusRomNo9L-Regu,,136,62
ASteCA,9,t1xtt,,6,6
"are a reﬂection not only of the
method itself, but also of the separate methods used to estimate
the center and radius values.",9,NimbusRomNo9L-Regu,,126,64
The,9,NimbusRomNo9L-Regu,,3,3
ASteCA,9,t1xtt,,6,6
"algorithm was thus applied on both datasets
(PHOT and PM), allowing it to automatically estimate the center
coordinates and radius value of the synthetic cluster. As shown
in Figs A.1 and A.2, pyUPMASK performs better than",9,NimbusRomNo9L-Regu,,222,63
ASteCA,9,t1xtt,,6,6
"for both datasets, particularly for the PHOT synthetic clusters.
We emphasize again that these results are not directly compara-
ble because, in the case of the",9,NimbusRomNo9L-Regu,,160,64
ASteCA,9,t1xtt,,6,6
"membership probabilities,
we also include the performance of the center of the cluster and
radius estimation methods. If any of these fail, which is not un-
common for scarcely populated clusters or those embedded in
ﬁelds with large amounts of contamination, then the Bayesian
membership estimation method in",9,NimbusRomNo9L-Regu,,309,65
ASteCA,9,t1xtt,,6,6
"fails too. This fact
notwithstanding, this is another great result that demonstrates the
capabilities of pyUPMASK.",9,NimbusRomNo9L-Regu,,114,67
"Article number, page 13 of 14",8,NimbusRomNo9L-Regu,,29,29
A,8,NimbusRomNo9L-Regu-Slant_167,,1,1
&,8,rtxr-Slant_167,,1,1
A proofs:,8,NimbusRomNo9L-Regu-Slant_167,,9,9
manuscript no. pera_etal,8,NimbusRomNo9L-Regu,,24,24
Fig. A.1.,8,NimbusRomNo9L-Medi,,9,9
Same as Fig. 6 but showing pyUPMASK versus,8,NimbusRomNo9L-Regu,,42,42
ASteCA,8,t1xtt,,6,6
.,8,NimbusRomNo9L-Regu,,1,1
Fig. A.2.,8,NimbusRomNo9L-Medi,,9,9
Same as Fig. 7 but showing pyUPMASK versus,8,NimbusRomNo9L-Regu,,42,42
ASteCA,8,t1xtt,,6,6
.,8,NimbusRomNo9L-Regu,,1,1
"Article number, page 14 of 14",8,NimbusRomNo9L-Regu,,29,29
